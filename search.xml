<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>jQuery图片延迟加载插件jQuery.lazyload</title>
      <link href="/xiaocong/2019/03/10/Lazyload/"/>
      <url>/xiaocong/2019/03/10/Lazyload/</url>
      
        <content type="html"><![CDATA[<p>插件描述：jQuery图片延迟加载插件jQuery.lazyload,使用延迟加载在可提高网页下载速度。在某些情况下，它也能帮助减轻服务器负载。</p><p>使用方法</p><p>引用jquery和jquery.lazyload.js到你的页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;jquery-1.11.0.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;jquery.lazyload.js?v=1.9.1&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>html图片调用方法</p><p>为图片加入样式lazy &nbsp;图片路径引用方法用data-original</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/bmw_m1_hood.jpg&quot;&gt;</span><br><span class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/bmw_m1_side.jpg&quot;&gt;</span><br><span class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/viper_1.jpg&quot;&gt;</span><br><span class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/viper_corner.jpg&quot;&gt;</span><br><span class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/bmw_m3_gt.jpg&quot;&gt;</span><br><span class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/corvette_pitstop.jpg&quot;&gt;</span><br></pre></td></tr></table></figure><p>js出始化lazyload并设置图片显示方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;</span><br><span class="line">  $(function() &#123;</span><br><span class="line">      $(&quot;img.lazy&quot;).lazyload(&#123;effect: &quot;fadeIn&quot;&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在图片中也可以不使用 class="lazy"，初始化时使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;img&quot;).lazyload(&#123;effect: &quot;fadeIn&quot;&#125;);</span><br></pre></td></tr></table></figure><p>如果想提载入图片，可以使用 threshold 进行设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;img.lazy&quot;).lazyload(&#123; threshold :180&#125;);</span><br></pre></td></tr></table></figure><p>以上实例的含义是：在图片距离屏幕180px时提前载入：</p><p>参数设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;img.lazy&quot;).lazyload(&#123;</span><br><span class="line">  placeholder : &quot;img/grey.gif&quot;, //用图片提前占位</span><br><span class="line">    // placeholder,值为某一图片路径.此图片用来占据将要加载的图片的位置,待图片加载时,占位图则会隐藏</span><br><span class="line">  effect: &quot;fadeIn&quot;, // 载入使用何种效果</span><br><span class="line">    // effect(特效),值有show(直接显示),fadeIn(淡入),slideDown(下拉)等,常用fadeIn</span><br><span class="line">  threshold: 200, // 提前开始加载</span><br><span class="line">    // threshold,值为数字,代表页面高度.如设置为200,表示滚动条在离目标位置还有200的高度时就开始加载图片,可以做到不让用户察觉</span><br><span class="line">  event: &apos;click&apos;,  // 事件触发时才加载</span><br><span class="line">    // event,值有click(点击),mouseover(鼠标划过),sporty(运动的),foobar(…).可以实现鼠标莫过或点击图片才开始加载,后两个值未测试…</span><br><span class="line">  container: $(&quot;#container&quot;),  // 对某容器中的图片实现效果</span><br><span class="line">    // container,值为某容器.lazyload默认在拉动浏览器滚动条时生效,这个参数可以让你在拉动某DIV的滚动条时依次加载其中的图片</span><br><span class="line">  failurelimit : 10 // 图片排序混乱时</span><br><span class="line">     // failurelimit,值为数字.lazyload默认在找到第一张不在可见区域里的图片时则不再继续加载,但当HTML容器混乱的时候可能出现可见区域内图片并没加载出来的情况,failurelimit意在加载N张可见区域外的图片,以避免出现这个问题.</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>dome查看 <a href="https://zbimbaloo.github.io/bimbaloo/dome/jquery.lazyLoad.js/lazyload.html">https://zbimbaloo.github.io/bimbaloo/dome/jquery.lazyLoad.js/lazyload.html</a></p>]]></content>
      
      
      <categories>
          
          <category> js插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LAYDATE日历插件使用</title>
      <link href="/xiaocong/2019/03/06/LaydateJs/"/>
      <url>/xiaocong/2019/03/06/LaydateJs/</url>
      
        <content type="html"><![CDATA[<p>LAYDATE日历插件使用</p><p>A npm version of laydate from <a href="http://www.layui.com/doc/modules/laydate.html" target="_blank" rel="noopener">laydate</a></p><h2 id="npm-命令"><a href="#npm-命令" class="headerlink" title="npm 命令:"></a>npm 命令:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save laydate</span><br></pre></td></tr></table></figure><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"mydate"</span> <span class="attr">id</span>=<span class="string">"mydate"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> laydate = <span class="built_in">require</span>(<span class="string">"laydate"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//init date</span></span><br><span class="line">laydate(&#123;</span><br><span class="line">elem: <span class="string">'#mydate'</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//reset </span></span><br><span class="line">laydate.reset();</span><br></pre></td></tr></table></figure><p>支持的选项    </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">     elem: <span class="string">'#id'</span>, <span class="comment">//需显示日期的元素选择器</span></span><br><span class="line">     event: <span class="string">'click'</span>, <span class="comment">//触发事件</span></span><br><span class="line">     format: <span class="string">'YYYY-MM-DD hh:mm:ss'</span>, <span class="comment">//日期格式</span></span><br><span class="line">     istime: <span class="literal">false</span>, <span class="comment">//是否开启时间选择</span></span><br><span class="line">     isclear: <span class="literal">true</span>, <span class="comment">//是否显示清空</span></span><br><span class="line">     istoday: <span class="literal">true</span>, <span class="comment">//是否显示今天</span></span><br><span class="line">     issure: <span class="literal">true</span>, 是否显示确认</span><br><span class="line">     festival: <span class="literal">true</span> <span class="comment">//是否显示节日</span></span><br><span class="line">     min: <span class="string">'1900-01-01 00:00:00'</span>, <span class="comment">//最小日期</span></span><br><span class="line">     max: <span class="string">'2099-12-31 23:59:59'</span>, <span class="comment">//最大日期</span></span><br><span class="line">     start: <span class="string">'2014-6-15 23:00:00'</span>,  <span class="comment">//开始日期</span></span><br><span class="line">     fixed: <span class="literal">false</span>, <span class="comment">//是否固定在可视区域</span></span><br><span class="line">     zIndex: <span class="number">99999999</span>, <span class="comment">//css z-index</span></span><br><span class="line">     choose: <span class="function"><span class="keyword">function</span>(<span class="params">dates</span>)</span>&#123; <span class="comment">//选择好日期的回调</span></span><br><span class="line">    </span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>更多查看  <a href="http://www.layui.com/doc/modules/layer.html" target="_blank" rel="noopener">http://www.layui.com/doc/modules/layer.html</a><br>dome查看 <a href="https://zbimbaloo.github.io/bimbaloo/dome/laydate/test/test.html">https://zbimbaloo.github.io/bimbaloo/dome/laydate/test/test.html</a></p>]]></content>
      
      
      <categories>
          
          <category> js插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见的js插件库</title>
      <link href="/xiaocong/2019/03/06/Js/"/>
      <url>/xiaocong/2019/03/06/Js/</url>
      
        <content type="html"><![CDATA[<p>常见的js插件库</p><h2 id="MVC-框架和库"><a href="#MVC-框架和库" class="headerlink" title="MVC 框架和库"></a>MVC 框架和库</h2><p>•angular.js – 为网络应用增强 HTML。<br>•aurelia – 一个适用于移动设备、桌面电脑和 web 的客户端 JavaScript 框架。<br>•backbone – 给你的 JS 应用加入带有 Models、Views、Collections 和 Events 的 Backbone。<br>•batman.js – 最适合 Rails 开发者的 JavaScript 框架。<br>•ember.js – 一个旨在创建非凡 web 应用的 JavaScript 框架。<br>•meteor – 一个超简单的、数据库无处不在的、只传输数据的纯 JavaScript web 框架。<br>•ractive – 新一代 DOM 操作。<br>•vue – 一个用于构建可交互界面的、直观快速和可组合的 MVVM 框架。<br>•knockout – Knockout 用 JavaScript 让创建响应式的富 UI 更加容易。<br>•spine – 构建 JavaScript 应用的轻量 MVC 库。<br>•espresso.js – 一个极小的、用于制作用户界面的 JavaScript 库。<br>•canjs – 让 JS 更好、更快、更简单。<br>•react – 用于建构用户界面的库。它是声明式的、高效的和极度灵活的，并使用虚拟 DOM 作为其不同的实现。<br>•react-native – 一个用 React 构建原生应用的框架。<br>•riot – 类 React 库，但很轻量。<br>•thorax – 加强你的 Backbone。<br>•chaplin – 使用 Backbone.js 库的 JavaScript 应用架构。<br>•marionette – 一个 Backbone.js 的复合应用程序库，旨在简化大型 JavaScript 应用结构。<br>•ripple – 一个小巧的、用于构建响应界面的基础框架。<br>•rivets – 轻量却拥有强大的数据绑定和模板解决方案<br>•derby – 让编写实时和协同应用更简单的 MVC 框架，能够在 Node.js 和浏览器同时运行。 •derby-awesome – 很棒的 derby 组件集合。<br>•way.js – 简单、轻量、持久化的双向数据绑定。<br>•mithril.js – Mithril 是一个客户端 MVC 框架（轻量、强大和快速）<br>•jsblocks – jsblocks 是一个更好的 MV-ish 框架。<br>•LiquidLava – 易懂的、用于构建用户界面的 MVC 框架。</p><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><p>•The JavaScript that you should know – 关于 JavaScript 函数化概念的文章。</p><h2 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h2><h3 id="Web-数据可视化工具"><a href="#Web-数据可视化工具" class="headerlink" title="Web 数据可视化工具"></a>Web 数据可视化工具</h3><p>•d3 – 一个对 HTML 和 SVG 进行可视化的 JavaScript 库。<br>•metrics-graphics – 更简洁和拥有更规范的数据图表布局优化算法的库。<br>•pykcharts.js – 经过精心设计后，去除 d3.js 复杂性的 d3.js 图表库。<br>•three.js – JavaScript 3D 库。<br>•Chart.js – 简单的、基于 canvas 标签的 HTML5 图表库。<br>•paper.js – 是矢量图形脚本中的瑞士军刀 —— 使用 HTML5 Canvas 将 Scriptographer 移植到 JavaScript 和浏览器。<br>•fabric.js – JavaScript Canvas 库，SVG 与 Canvas 可以相互解析。<br>•peity – 进度条、线状和饼状图。<br>•raphael – JavaScript 矢量库。<br>•echarts – 商业产品图表。<br>•vis – 动态的、基于浏览器的可视化库。<br>•two.js – 一个渲染器无关的适用于 web 的二维绘图 api 。<br>•g.raphael – 基于 Rapha?l 图表库。<br>•sigma.js – 一个致力于图形绘画的 JavaScript 库。<br>•arbor – 一个使用 web workers 和 jQuery 的图形可视化库。<br>•cubism – 可视化时间序列的 D3 插件。<br>•dc.js – 与 crossfilter 无缝合作的多维图表绘制库，使用 d3.js 渲染。<br>•vega – 一套可视化语法。<br>•processing.js – Processing.js 基于 Web 标准使数据可视化，而无需任何插件。<br>•envisionjs – 动态的 HTML5 可视化。<br>•rickshaw – 用于构建交互式实时图表的 JavaScript 工具包。<br>•flot – 吸引人的、基于 jQuery 的 JavaScript 图表库。<br>•morris.js – 漂亮的时间序列线框图。<br>•nvd3 – 一个为 D3.js 构建可复用图表和图表组件的库。<br>•svg.js – 一个轻量的、用于操作和添加 SVG 动画的库。<br>•heatmap.js – 基于 HTML5 canvas 的热力图 JavaScript 库。<br>•jquery.sparkline – 一个直接在浏览器端生成小型走势图的 jQuery 插件。<br>•xCharts – 一个基于 D3、用于构建自定义图表和图形的库。<br>•trianglify – 基于 d3.js 的低多边形（low poly）风格背景图片生成器。<br>•d3-cloud – 创建词云（word cloud）效果的 JavaScript 库。<br>•d4 – 一个基于 D3 、友好、可复用的 DSL 图表库 。<br>•dimple.js – 基于 d3 的简易商业分析图表库。<br>•chartist-js – 简单的响应式图表。<br>•epoch – 一个通用的实时图表库。<br>•c3 – 基于 D3 的可复用图表库。<br>•BabylonJS – 一个运用 HTML5 和 WebGL 构建 3D 游戏的框架。</p><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><p>•ClassManager – 世界上最快、最方便的类系统之一。<br>•klass – 用于创建极富表现力的类工具库。<br>•augment – 世界上最小且最快的一流 JavaScript 继承模式。</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>•Parsley.js – 不用写一行 JavaScript 代码即可在前端验证表单。<br>•jquery-validation – jQuery 验证插件。<br>•validator.js – 字符串验证和过滤（在使用用户输入之前清理用户输入中的有害或危险字符的操作）。<br>•validate.js – 受 CodeIgniter 启发的轻量表单验证 JavaScript 库。<br>•validatr – 跨浏览器的 HTML5 表单验证库。<br>•BootstrapValidator – 是验证表单域中最好的 jQuery 插件。要与 Bootstrap 3 一起使用。<br>•is.js – 检查类型、正则表达式、是否存在、时间等。<br>•FieldVal – 多用途验证库。同时支持同步和异步验证。</p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>•jQuery-File-Upload – File Upload 是一个支持多文件选择、文件拖放、进度条、验证和图片、音频、视频预览的 jQuery 插件。<br>•dropzone – Dropzone 是一个易于使用且支持多文件拖放的库。其支持图片预览并且拥有很好的进度条效果。<br>•flow.js – 一个通过 HTML5 的 File API ，提供多个同时链接的、稳定的、容错的、可恢复的/可重新开始的文件上传库。<br>•fine-uploader – 一个带有进度条、拖放功能和支持直接上传到 S3 （Amazon Simple Storage Service，亚马逊简易存储服务）的多文件上传插件。<br>•FileAPI – JavaScript 文件工具集合。支持多文件上传、拖放和文件分块上传。对于图像，支持裁剪、调整大小和根据 EXIF 自动调整方向。<br>•plupload – 处理文件上传的 JavaScript API，其支持多文件选择、文件类型过滤、分块请求、客户端图片缩放和根据不同的运行环境选择 HTML5、Silverlight 和 Flash。</p><h2 id="模态框和弹出框"><a href="#模态框和弹出框" class="headerlink" title="模态框和弹出框"></a>模态框和弹出框</h2><p>•Magnific-Popup – 专注于性能、轻量、响应式的灯箱（lightbox）脚本。<br>•jquery-popbox – jQuery 提示框插件。<br>•jquery.avgrund.js – 一种新的定于弹出的模态框 jQuery 插件。<br>•vex – 新的、拥有高度可配置和易于改变样式功能的对话框库。<br>•bootstrap-modal – 对 Bootstrap 默认的模态框类进行扩展。其支持响应式、可堆叠和 ajax 等。<br>•css-modal – 纯 CSS 打造的模态框。<br>•jquery-popup-overlay – 是一个响应式的和可访问性强的模态框和工具提示框（tooltips）jQuery 插件。</p><h2 id="图像处理"><a href="#图像处理" class="headerlink" title="图像处理"></a>图像处理</h2><p>•lena.js – 拥有滤镜和实用功能的图像处理库。<br>•pica – 高质量地调整图片大小（拥有快速的、纯 JS 实现的 Lanczos 滤镜算法）。<br>•cropper – 一个简单的图像裁剪 jQuery 插件。</p><h2 id="视频-音频"><a href="#视频-音频" class="headerlink" title="视频/音频"></a>视频/音频</h2><p>•prettyembed.js – 更完美地嵌入 YouTube —— 拥有很好的选项，如高分辨率的预览图、嵌入选项的高级定制和可选的 FitVids 支持。<br>•html5media – 能在所有主流浏览器播放多媒体标签中定义的多媒体文件。<a href="http://html5media.info/" target="_blank" rel="noopener">http://html5media.info/</a><br>•Play-em JS – Play’em 是一个 JavaScript 组件，它能管理音乐/视频播放顺序，通过在一个 DIV 元素里嵌入几个播放器（Youtube、Soundcloud 和 Vimeo）来控制一系列歌曲的播放。<br>•polyplayer – 将 YouTube、Soundcloud 和 Vimeo 播放器的 API 统一成一套。<br>•flowplayer – HTML5 视频播放器 <a href="http://flowplayer.org/" target="_blank" rel="noopener">http://flowplayer.org/</a><br>•mediaelement – 让 HTML5、 Flash 播放器和模仿 HTML5 媒介元素 API 的 Silverlight shim，在所有浏览器拥有一致的 UI。<a href="http://mediaelementjs.com/" target="_blank" rel="noopener">http://mediaelementjs.com/</a><br>•SoundJS – 让音频在 web 上运行更简单的库。它为不同浏览器提供了一致的 API。</p><h2 id="表格网格"><a href="#表格网格" class="headerlink" title="表格网格"></a>表格网格</h2><p>•jTable – 基于 CRUD 表创建 AJAX 的 jQuery 插件。<br>•DataTables – 这是一个非常灵活的工具，在渐进增强的基础上，将高级的交互效果加到 HTML 表格。（jQuery 插件）<br>•floatThead – （jQuery 插件）锁定表格头部，只允许表格内容滚动。适用于任何表格，而且不需要额外的 html 或 css。<br>•Masonry – 瀑布流式的网格布局库。<br>•Packery – 使用装箱算法（bin-packing）的网格布局库。支持拖拽布局。<br>•Isotope – 可过滤和可排序的网格布局的库，它能实现 Masonry、Packery 等布局。</p><h2 id="滚动"><a href="#滚动" class="headerlink" title="滚动"></a>滚动</h2><p>•scrollMonitor – 滚动发生时，可以监听元素的、简单、快速的 API。<br>•headroom – 除非你需要显示页面头部（header），否则将隐藏它，以腾出页面头部空间。<br>•onepage-scroll – 创建一个类似 Apple 的单页面滚动网站（iPhone 5S 网站）。<br>•iscroll – 高性能、轻量、无依赖、兼容多平台的 JavaScript 滚动组件。<br>•skrollr – 独立（不依赖 jQuery） 的视差滚动库，适用于移动设备（Android + iOS）和桌面电脑。<br>•parallax – 面向智能设备的视差引擎。<br>•stellar.js – 让视差滚动变简单。<br>•plax – 基于 jQuery 的视差库。<br>•jparallax – 创建可交互视差效果的 jQuery 插件。<br>•fullPage – 简单和易于使用的、用于创建全屏滚动网站的插件（也被称为单页面网站）。<br>•ScrollMenu – 让老旧无聊的滚动条焕然一新。</p>]]></content>
      
      
      <categories>
          
          <category> 汇总 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html5.js让IE（包括IE6）支持HTML5元素方法</title>
      <link href="/xiaocong/2019/03/05/Html5Js/"/>
      <url>/xiaocong/2019/03/05/Html5Js/</url>
      
        <content type="html"><![CDATA[<p>html5.js让IE（包括IE6）支持HTML5元素方法</p><h2 id="1、引用Google的html5-js文件"><a href="#1、引用Google的html5-js文件" class="headerlink" title="1、引用Google的html5.js文件"></a>1、引用Google的html5.js文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--[if IE]&gt;</span><br><span class="line">&lt;script src=”http://html5shiv.googlecode.com/svn/trunk/html5.js”&gt;&lt;/script&gt;</span><br><span class="line">&lt; ![endif]--&gt;</span><br></pre></td></tr></table></figure><p><b>将上代码复制到head部分，记住一定要是head部分</b>（因为IE必须在元素解析前知道这个元素，所以这个js文件不能在其他位置调用，否则失效）</p><p>当然，你也可以把代码拿出来自己看着办：html5.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">    /*</span><br><span class="line"> HTML5 Shiv v3.6.2pre | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed</span><br><span class="line"> Uncompressed source: https://github.com/aFarkas/html5shiv</span><br><span class="line">*/</span><br><span class="line">(function(l, f) &#123;</span><br><span class="line">    function m() &#123;</span><br><span class="line">        var a = e.elements;</span><br><span class="line">        return &quot;string&quot; == typeof a ? a.split(&quot; &quot;) : a</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function i(a) &#123;</span><br><span class="line">        var b = n[a[o]];</span><br><span class="line">        b || (b = &#123;&#125;, h++, a[o] = h, n[h] = b);</span><br><span class="line">        return b</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function p(a, b, c) &#123;</span><br><span class="line">        b || (b = f);</span><br><span class="line">        if (g) return b.createElement(a);</span><br><span class="line">        c || (c = i(b));</span><br><span class="line">        b = c.cache[a] ? c.cache[a].cloneNode() : r.test(a) ? (c.cache[a] = c.createElem(a)).cloneNode() : c.createElem(a);</span><br><span class="line">        return b.canHaveChildren &amp;&amp; !s.test(a) ? c.frag.appendChild(b) : b</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function t(a, b) &#123;</span><br><span class="line">        if (!b.cache) b.cache = &#123;&#125;, b.createElem = a.createElement, b.createFrag = a.createDocumentFragment, b.frag = b.createFrag();</span><br><span class="line">        a.createElement = function(c) &#123;</span><br><span class="line">            return !e.shivMethods ? b.createElem(c) : p(c, a, b)</span><br><span class="line">        &#125;;</span><br><span class="line">        a.createDocumentFragment = Function(&quot;h,f&quot;, &quot;return function()&#123;var n=f.cloneNode(),c=n.createElement;h.shivMethods&amp;&amp;(&quot; + m().join().replace(/\w+/g, function(a) &#123;</span><br><span class="line">            b.createElem(a);</span><br><span class="line">            b.frag.createElement(a);</span><br><span class="line">            return &apos;c(&quot;&apos; + a + &apos;&quot;)&apos;</span><br><span class="line">        &#125;) + &quot;);return n&#125;&quot;)(e, b.frag)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function q(a) &#123;</span><br><span class="line">        a || (a = f);</span><br><span class="line">        var b = i(a);</span><br><span class="line">        if (e.shivCSS &amp;&amp; !j &amp;&amp; !b.hasCSS) &#123;</span><br><span class="line">            var c, d = a;</span><br><span class="line">            c = d.createElement(&quot;p&quot;);</span><br><span class="line">            d = d.getElementsByTagName(&quot;head&quot;)[0] || d.documentElement;</span><br><span class="line">            c.innerHTML = &quot;x&lt;style&gt;article,aside,figcaption,figure,footer,header,hgroup,main,nav,section&#123;display:block&#125;mark&#123;background:#FF0;color:#000&#125;&lt;/style&gt;&quot;;</span><br><span class="line">            c = d.insertBefore(c.lastChild, d.firstChild);</span><br><span class="line">            b.hasCSS = !! c</span><br><span class="line">        &#125;</span><br><span class="line">        g || t(a, b);</span><br><span class="line">        return a</span><br><span class="line">    &#125;</span><br><span class="line">    var k = l.html5 || &#123;&#125;, s = /^&lt;|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,</span><br><span class="line">        r = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,</span><br><span class="line">        j, o = &quot;_html5shiv&quot;,</span><br><span class="line">        h = 0,</span><br><span class="line">        n = &#123;&#125;, g;</span><br><span class="line">    (function() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            var a = f.createElement(&quot;a&quot;);</span><br><span class="line">            a.innerHTML = &quot;&lt;xyz&gt;&lt;/xyz&gt;&quot;;</span><br><span class="line">            j = &quot;hidden&quot; in a;</span><br><span class="line">            var b;</span><br><span class="line">            if (!(b = 1 == a.childNodes.length)) &#123;</span><br><span class="line">                f.createElement(&quot;a&quot;);</span><br><span class="line">                var c = f.createDocumentFragment();</span><br><span class="line">                b = &quot;undefined&quot; == typeof c.cloneNode ||</span><br><span class="line">                    &quot;undefined&quot; == typeof c.createDocumentFragment || &quot;undefined&quot; == typeof c.createElement</span><br><span class="line">            &#125;</span><br><span class="line">            g = b</span><br><span class="line">        &#125; catch (d) &#123;</span><br><span class="line">            g = j = !0</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">    var e = &#123;</span><br><span class="line">        elements: k.elements || &quot;abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup main mark meter nav output progress section summary time video&quot;,</span><br><span class="line">        version: &quot;3.6.2pre&quot;,</span><br><span class="line">        shivCSS: !1 !== k.shivCSS,</span><br><span class="line">        supportsUnknownElements: g,</span><br><span class="line">        shivMethods: !1 !== k.shivMethods,</span><br><span class="line">        type: &quot;default&quot;,</span><br><span class="line">        shivDocument: q,</span><br><span class="line">        createElement: p,</span><br><span class="line">        createDocumentFragment: function(a, b) &#123;</span><br><span class="line">            a || (a = f);</span><br><span class="line">            if (g) return a.createDocumentFragment();</span><br><span class="line">            for (var b = b || i(a), c = b.frag.cloneNode(), d = 0, e = m(), h = e.length; d &lt; h; d++) c.createElement(e[d]);</span><br><span class="line">            return c</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    l.html5 = e;</span><br><span class="line">    q(f)</span><br><span class="line">&#125;)(this, document);</span><br></pre></td></tr></table></figure><h2 id="2、最后在css里面加上这段："><a href="#2、最后在css里面加上这段：" class="headerlink" title="2、最后在css里面加上这段："></a>2、最后在css里面加上这段：</h2><p>/<em>html5</em>/<br>article,aside,dialog,footer,header,section,footer,nav,figure,menu{display:block}</p>]]></content>
      
      
      <categories>
          
          <category> js插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>video.js的使用及问题</title>
      <link href="/xiaocong/2019/03/04/VideoJs/"/>
      <url>/xiaocong/2019/03/04/VideoJs/</url>
      
        <content type="html"><![CDATA[<p>最近的项目中需要播放视频，鉴于html5元素video的一些坑及不想自己造轮子，于是就找到了web端播放视频使用量最多的插件video.js，video.js是国外开发者开发的，英语本身就不好的我看英文文档简直是折磨，国内又没有中文文档，能搜的到的基本是简单的使用及最基本的api的介绍，想要实现一些自定义功能无从下手，所以我在这里整理一份我所遇到的问题及解决方法</p><h2 id="1、视频初始化"><a href="#1、视频初始化" class="headerlink" title="1、视频初始化"></a>1、视频初始化</h2><p>video.js有两种初始化方式，一种是在video的html标签之中，一种是使用js来进行初始化</p><h3 id="1-1、在video中进行初始化"><a href="#1-1、在video中进行初始化" class="headerlink" title="1.1、在video中进行初始化"></a>1.1、在video中进行初始化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  &lt;video</span><br><span class="line">  id=&quot;my-player&quot;</span><br><span class="line">  class=&quot;video-js&quot;</span><br><span class="line">  controls</span><br><span class="line">  preload=&quot;auto&quot;</span><br><span class="line">  poster=&quot;//vjs.zencdn.net/v/oceans.png&quot;</span><br><span class="line">  width=&quot;600&quot;</span><br><span class="line">  height=&quot;400&quot;</span><br><span class="line">  data-setup=&apos;&#123;&#125;&apos;&gt;</span><br><span class="line">&lt;source src=&quot;//vjs.zencdn.net/v/oceans.mp4&quot; type=&quot;video/mp4&quot;&gt;&lt;/source&gt;</span><br><span class="line">&lt;source src=&quot;//vjs.zencdn.net/v/oceans.webm&quot; type=&quot;video/webm&quot;&gt;&lt;/source&gt;</span><br><span class="line">&lt;source src=&quot;//vjs.zencdn.net/v/oceans.ogv&quot; type=&quot;video/ogg&quot;&gt;&lt;/source&gt;</span><br><span class="line">&lt;p class=&quot;vjs-no-js&quot;&gt;</span><br><span class="line">  To view this video please enable JavaScript, and consider upgrading to a</span><br><span class="line">  web browser that</span><br><span class="line">  &lt;a href=&quot;https://videojs.com/html5-video-support/&quot; target=&quot;_blank&quot;&gt;</span><br><span class="line">    supports HTML5 video</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure><p>效果</p><p><img src="/xiaocong/medias/banner/articlex.png" alt="效果图" title></p><h3 id="1-2、使用js进行初始化"><a href="#1-2、使用js进行初始化" class="headerlink" title="1.2、使用js进行初始化"></a>1.2、使用js进行初始化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">    &lt;!-- vjs-big-play-centered可使大的播放按钮居住，vjs-fluid可使视频占满容器 --&gt;</span><br><span class="line">&lt;video id=&quot;myVideo&quot; class=&quot;video-js vjs-big-play-centered vjs-fluid&quot;&gt;</span><br><span class="line">  &lt;p class=&quot;vjs-no-js&quot;&gt;</span><br><span class="line">    To view this video please enable JavaScript, and consider upgrading to a</span><br><span class="line">    web browser that</span><br><span class="line">    &lt;a href=&quot;https://videojs.com/html5-video-support/&quot; target=&quot;_blank&quot;&gt;</span><br><span class="line">      supports HTML5 video</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">&lt;/video&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">var player = videojs(document.getElementById(&apos;myVideo&apos;), &#123;</span><br><span class="line">  controls: true, // 是否显示控制条</span><br><span class="line">  poster: &apos;xxx&apos;, // 视频封面图地址</span><br><span class="line">  preload: &apos;auto&apos;,</span><br><span class="line">  autoplay: false,</span><br><span class="line">  fluid: true, // 自适应宽高</span><br><span class="line">  language: &apos;zh-CN&apos;, // 设置语言</span><br><span class="line">  muted: false, // 是否静音</span><br><span class="line">  inactivityTimeout: false,</span><br><span class="line">  controlBar: &#123; // 设置控制条组件</span><br><span class="line">    /* 设置控制条里面组件的相关属性及显示与否</span><br><span class="line">    &apos;currentTimeDisplay&apos;:true,</span><br><span class="line">    &apos;timeDivider&apos;:true,</span><br><span class="line">    &apos;durationDisplay&apos;:true,</span><br><span class="line">    &apos;remainingTimeDisplay&apos;:false,</span><br><span class="line">    volumePanel: &#123;</span><br><span class="line">      inline: false,</span><br><span class="line">    &#125;</span><br><span class="line">    */</span><br><span class="line">    /* 使用children的形式可以控制每一个控件的位置，以及显示与否 */</span><br><span class="line">    children: [</span><br><span class="line">      &#123;name: &apos;playToggle&apos;&#125;, // 播放按钮</span><br><span class="line">      &#123;name: &apos;currentTimeDisplay&apos;&#125;, // 当前已播放时间</span><br><span class="line">      &#123;name: &apos;progressControl&apos;&#125;, // 播放进度条</span><br><span class="line">      &#123;name: &apos;durationDisplay&apos;&#125;, // 总时间</span><br><span class="line">      &#123; // 倍数播放</span><br><span class="line">        name: &apos;playbackRateMenuButton&apos;,</span><br><span class="line">        &apos;playbackRates&apos;: [0.5, 1, 1.5, 2, 2.5]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: &apos;volumePanel&apos;, // 音量控制</span><br><span class="line">        inline: false, // 不使用水平方式</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;name: &apos;FullscreenToggle&apos;&#125; // 全屏</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  sources:[ // 视频源</span><br><span class="line">      &#123;</span><br><span class="line">          src: &apos;//vjs.zencdn.net/v/oceans.mp4&apos;,</span><br><span class="line">          type: &apos;video/mp4&apos;,</span><br><span class="line">          poster: &apos;//vjs.zencdn.net/v/oceans.png&apos;</span><br><span class="line">      &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;, function ()&#123;</span><br><span class="line">  console.log(&apos;视频可以播放了&apos;,this);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="2、controlBar组件的说明"><a href="#2、controlBar组件的说明" class="headerlink" title="2、controlBar组件的说明"></a>2、controlBar组件的说明</h2><ul><li>playToggle, //播放暂停按钮</li><li>volumeMenuButton,//音量控制</li><li>currentTimeDisplay,//当前播放时间</li><li>timeDivider, // ‘/‘ 分隔符</li><li>durationDisplay, //总时间</li><li>progressControl, //点播流时，播放进度条，seek控制</li><li>liveDisplay, //直播流时，显示LIVE</li><li>remainingTimeDisplay, //当前播放时间</li><li>playbackRateMenuButton, //播放速率，当前只有html5模式下才支持设置播放速率</li><li>fullscreenToggle //全屏控制</li></ul><p>currentTimeDisplay,timeDivider,durationDisplay是相对于 remainingTimeDisplay的另一套组件，后者只显示当前播放时间，前者还显示总时间。若要显示成前者这种模式，即 ‘当前时间/总时间’，可以在初始化播放器选项中配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var myPlayer = neplayer(&apos;my-video&apos;, &#123;controlBar:&#123;</span><br><span class="line">&apos;currentTimeDisplay&apos;:true,</span><br><span class="line">&apos;timeDivider&apos;:true,</span><br><span class="line">&apos;durationDisplay&apos;:true,</span><br><span class="line">&apos;remainingTimeDisplay&apos;:false</span><br><span class="line">&#125;&#125;, function() &#123;</span><br><span class="line">     console.log(&apos;播放器初始化完成&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="3、video-js样式修改"><a href="#3、video-js样式修改" class="headerlink" title="3、video.js样式修改"></a>3、video.js样式修改</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">.video-js&#123; /* 给.video-js设置字体大小以统一各浏览器样式表现，因为video.js采用的是em单位 */</span><br><span class="line">  font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line">.video-js button&#123;</span><br><span class="line">  outline: none;</span><br><span class="line">&#125;</span><br><span class="line">.video-js.vjs-fluid,</span><br><span class="line">.video-js.vjs-16-9,</span><br><span class="line">.video-js.vjs-4-3&#123; /* 视频占满容器高度 */</span><br><span class="line">  height: 100%;</span><br><span class="line">  background-color: #161616;</span><br><span class="line">&#125;</span><br><span class="line">.vjs-poster&#123;</span><br><span class="line">  background-color: #161616;</span><br><span class="line">&#125;</span><br><span class="line">.video-js .vjs-big-play-button&#123; /* 中间大的播放按钮 */</span><br><span class="line">  font-size: 2.5em;</span><br><span class="line">  line-height: 2.3em;</span><br><span class="line">  height: 2.5em;</span><br><span class="line">  width: 2.5em;</span><br><span class="line">  -webkit-border-radius: 2.5em;</span><br><span class="line">  -moz-border-radius: 2.5em;</span><br><span class="line">  border-radius: 2.5em;</span><br><span class="line">  background-color: rgba(115,133,159,.5);</span><br><span class="line">  border-width: 0.12em;</span><br><span class="line">  margin-top: -1.25em;</span><br><span class="line">  margin-left: -1.75em;</span><br><span class="line">&#125;</span><br><span class="line">.video-js.vjs-paused .vjs-big-play-button&#123; /* 视频暂停时显示播放按钮 */</span><br><span class="line">  display: block;</span><br><span class="line">&#125;</span><br><span class="line">.video-js.vjs-error .vjs-big-play-button&#123; /* 视频加载出错时隐藏播放按钮 */</span><br><span class="line">  display: none;</span><br><span class="line">&#125;</span><br><span class="line">.vjs-loading-spinner &#123; /* 加载圆圈 */</span><br><span class="line">  font-size: 2.5em;</span><br><span class="line">  width: 2em;</span><br><span class="line">  height: 2em;</span><br><span class="line">  border-radius: 1em;</span><br><span class="line">  margin-top: -1em;</span><br><span class="line">  margin-left: -1.5em;</span><br><span class="line">&#125;</span><br><span class="line">.video-js .vjs-control-bar&#123; /* 控制条默认显示 */</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br><span class="line">.video-js .vjs-time-control&#123;display:block;&#125;</span><br><span class="line">.video-js .vjs-remaining-time&#123;display: none;&#125;</span><br><span class="line"></span><br><span class="line">.vjs-button &gt; .vjs-icon-placeholder:before&#123; /* 控制条所有图标，图标字体大小最好使用px单位，如果使用em，各浏览器表现可能会不大一样 */</span><br><span class="line">  font-size: 22px;</span><br><span class="line">  line-height: 1.9;</span><br><span class="line">&#125;</span><br><span class="line">.video-js .vjs-playback-rate .vjs-playback-rate-value&#123;</span><br><span class="line">  line-height: 2.4;</span><br><span class="line">  font-size: 18px;</span><br><span class="line">&#125;</span><br><span class="line">/* 进度条背景色 */</span><br><span class="line">.video-js .vjs-play-progress&#123;</span><br><span class="line">  color: #ffb845;</span><br><span class="line">  background-color: #ffb845;</span><br><span class="line">&#125;</span><br><span class="line">.video-js .vjs-progress-control .vjs-mouse-display&#123;</span><br><span class="line">  background-color: #ffb845;</span><br><span class="line">&#125;</span><br><span class="line">.vjs-mouse-display .vjs-time-tooltip&#123;</span><br><span class="line">  padding-bottom: 6px;</span><br><span class="line">  background-color: #ffb845;</span><br><span class="line">&#125;</span><br><span class="line">.video-js .vjs-play-progress .vjs-time-tooltip&#123;</span><br><span class="line">  display: none!important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、动态切换视频"><a href="#4、动态切换视频" class="headerlink" title="4、动态切换视频"></a>4、动态切换视频</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  var data = &#123;</span><br><span class="line">    src: &apos;xxx.mp4&apos;,</span><br><span class="line">    type: &apos;video/mp4&apos;</span><br><span class="line">  &#125;;</span><br><span class="line">  var player = videojs(&apos;myVideo&apos;, &#123;...&#125;);</span><br><span class="line">  player.pause();</span><br><span class="line">  player.src(data);</span><br><span class="line">  player.load(data);</span><br><span class="line">  // 动态切换poster</span><br><span class="line">  player.posterImage.setSrc(&apos;xxx.jpg&apos;);</span><br><span class="line">  player.play();</span><br><span class="line"></span><br><span class="line">  // 销毁videojs</span><br><span class="line">  //player.dispose();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="5、设置语言"><a href="#5、设置语言" class="headerlink" title="5、设置语言"></a>5、设置语言</h2><h3 id="5-1传统形式开发"><a href="#5-1传统形式开发" class="headerlink" title="5.1传统形式开发"></a>5.1传统形式开发</h3><p>对于使用script标签形式的方式引入video.js，只需要在页面中引入你需要的语言包即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;//example.com/path/to/lang/es.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;//example.com/path/to/lang/zh-CN.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;//example.com/path/to/lang/zh-TW.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">var player = videojs(&apos;myVideo&apos;, &#123;</span><br><span class="line">    language: &apos;zh-CN&apos; // 初始化时设置语言，立即生效</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">/* 动态切换语言</span><br><span class="line">  使用这种方式进行动态切换不会立即生效，必须有所操作后才会生效。如播放按钮，必须点击一次播放按钮后播放按钮的提示文字才会改变  </span><br><span class="line"> */</span><br><span class="line">//player.language(&apos;zh-TW&apos;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="5-2、vue开发"><a href="#5-2、vue开发" class="headerlink" title="5.2、vue开发"></a>5.2、vue开发</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import Video from &apos;video.js&apos;</span><br><span class="line">/* 不能直接引入js，否则会报错：videojs is not defined </span><br><span class="line">import &apos;video.js/dist/lang/zh-CN.js&apos; */</span><br><span class="line">import video_zhCN from &apos;video.js/dist/lang/zh-CN.json&apos;</span><br><span class="line">import video_en from  &apos;video.js/dist/lang/en.json&apos;</span><br><span class="line">import &apos;video.js/dist/video-js.css&apos;</span><br><span class="line">Video.addLanguage(&apos;zh-CN&apos;, video_zhCN);</span><br><span class="line">Video.addLanguage(&apos;en&apos;, video_en);</span><br></pre></td></tr></table></figure><h2 id="6、解决在iPhone中播放时自动全屏问题"><a href="#6、解决在iPhone中播放时自动全屏问题" class="headerlink" title="6、解决在iPhone中播放时自动全屏问题"></a>6、解决在iPhone中播放时自动全屏问题</h2><p>在iPhone设备上播放视频时(微信浏览器上也会有这个问题)会自动全屏，这里的全屏并不是常规的手机横屏那种全屏，而是类似于一个modal弹窗的全屏，解决办法就是在video标签中添加playsinline=”true”属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;video</span><br><span class="line">    webkit-playsinline=&quot;true&quot;</span><br><span class="line">    playsinline=&quot;true&quot;</span><br><span class="line">    class=&quot;video-js vjs-big-play-centered vjs-fluid&quot;&gt;</span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure><h2 id="7、参考文章"><a href="#7、参考文章" class="headerlink" title="7、参考文章"></a>7、参考文章</h2><ul><li><a href="http://vcloud.163.com/vcloud-sdk-manual/WebDemos/LivePlayer_Web/introToComponent.html" rel="nofollow noreferrer" target="_blank">视频云web播放器样式和组件自定义</a></li><li><a href="https://zhuanlan.zhihu.com/p/28338413" rel="nofollow noreferrer" target="_blank">Video.js 踩坑简单入门</a></li><li><a href="http://www.cnblogs.com/afrog/p/6689179.html" rel="nofollow noreferrer" target="_blank">免费视频播放器videojs中文教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> js插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora-vue-theme Theme introduction</title>
      <link href="/xiaocong/2018/09/07/hello-world/"/>
      <url>/xiaocong/2018/09/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p><img src="https://www.zybuluo.com/static/img/logo.png" alt="cmd-markdown-logo" title></p>### Create a new post<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 介绍 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
