<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>chart.js一个生成图表的js插件</title>
      <link href="/xiaocong/2019/03/12/ChartJs/"/>
      <url>/xiaocong/2019/03/12/ChartJs/</url>
      
        <content type="html"><![CDATA[<h2 id="创建图表"><a href="#创建图表" class="headerlink" title="创建图表"></a>创建图表</h2><p>要创建图表，我们需要实例化Chart该类。为此，我们需要传入要绘制图表的画布的节点，jQuery实例或2d上下文。这是一个例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas id=&quot;myChart&quot; width=&quot;400&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">// Any of the following formats may be used</span><br><span class="line">var ctx = document.getElementById(&apos;myChart&apos;);</span><br><span class="line">var ctx = document.getElementById(&apos;myChart&apos;).getContext(&apos;2d&apos;);</span><br><span class="line">var ctx = $(&apos;#myChart&apos;);</span><br><span class="line">var ctx = &apos;myChart&apos;;</span><br></pre></td></tr></table></figure><p>有了元素或上下文后，就可以实例化预定义的图表类型或创建自己的图表类型了！</p><p>以下示例实例化了一个条形图，该条形图显示了不同颜色的投票数，y轴从0开始。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas id=&quot;myChart&quot; width=&quot;400&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var ctx = document.getElementById(&apos;myChart&apos;);</span><br><span class="line">var myChart = new Chart(ctx, &#123;</span><br><span class="line">    type: &apos;bar&apos;,</span><br><span class="line">    data: &#123;</span><br><span class="line">        labels: [&apos;Red&apos;, &apos;Blue&apos;, &apos;Yellow&apos;, &apos;Green&apos;, &apos;Purple&apos;, &apos;Orange&apos;],</span><br><span class="line">        datasets: [&#123;</span><br><span class="line">            label: &apos;# of Votes&apos;,</span><br><span class="line">            data: [12, 19, 3, 5, 2, 3],</span><br><span class="line">            backgroundColor: [</span><br><span class="line">                &apos;rgba(255, 99, 132, 0.2)&apos;,</span><br><span class="line">                &apos;rgba(54, 162, 235, 0.2)&apos;,</span><br><span class="line">                &apos;rgba(255, 206, 86, 0.2)&apos;,</span><br><span class="line">                &apos;rgba(75, 192, 192, 0.2)&apos;,</span><br><span class="line">                &apos;rgba(153, 102, 255, 0.2)&apos;,</span><br><span class="line">                &apos;rgba(255, 159, 64, 0.2)&apos;</span><br><span class="line">            ],</span><br><span class="line">            borderColor: [</span><br><span class="line">                &apos;rgba(255, 99, 132, 1)&apos;,</span><br><span class="line">                &apos;rgba(54, 162, 235, 1)&apos;,</span><br><span class="line">                &apos;rgba(255, 206, 86, 1)&apos;,</span><br><span class="line">                &apos;rgba(75, 192, 192, 1)&apos;,</span><br><span class="line">                &apos;rgba(153, 102, 255, 1)&apos;,</span><br><span class="line">                &apos;rgba(255, 159, 64, 1)&apos;</span><br><span class="line">            ],</span><br><span class="line">            borderWidth: 1</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;,</span><br><span class="line">    options: &#123;</span><br><span class="line">        scales: &#123;</span><br><span class="line">            yAxes: [&#123;</span><br><span class="line">                ticks: &#123;</span><br><span class="line">                    beginAtZero: true</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h2><p>条形图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var myBarChart = new Chart(ctx, &#123;</span><br><span class="line">    type: &apos;bar&apos;,</span><br><span class="line">    data: data,</span><br><span class="line">    options: options</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>折线图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var myLineChart = new Chart(ctx, &#123;</span><br><span class="line">    type: &apos;line&apos;,</span><br><span class="line">    data: data,</span><br><span class="line">    options: options</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>雷达图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var myRadarChart = new Chart(ctx, &#123;</span><br><span class="line">    type: &apos;radar&apos;,</span><br><span class="line">    data: data,</span><br><span class="line">    options: options</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>极地面积图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">new Chart(ctx, &#123;</span><br><span class="line">    data: data,</span><br><span class="line">    type: &apos;polarArea&apos;,</span><br><span class="line">    options: options</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>饼图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var myDoughnutChart = new Chart(ctx, &#123;</span><br><span class="line">    type: &apos;doughnut&apos;,</span><br><span class="line">    data: data,</span><br><span class="line">    options: options</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>甜甜圈图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var myPieChart = new Chart(ctx, &#123;</span><br><span class="line">    type: &apos;pie&apos;,</span><br><span class="line">    data: data,</span><br><span class="line">    options: options</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="参数-数据"><a href="#参数-数据" class="headerlink" title="参数/数据"></a>参数/数据</h2><p>矩形图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">   var data = &#123;</span><br><span class="line">labels: [&quot;January&quot;, &quot;February&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot;],</span><br><span class="line">datasets: [&#123;</span><br><span class="line">// 当前图表数据的标题内容</span><br><span class="line">label: &quot;第一条数据&quot;,</span><br><span class="line">// 是否填充折线与水平轴中间的区域</span><br><span class="line">fill: true,</span><br><span class="line">// 设置折线数据点的贝塞尔曲线值（值为0时为折线）</span><br><span class="line">lineTension: 0.1,</span><br><span class="line">// 设置背景颜色</span><br><span class="line">backgroundColor: &quot;rgba(75,192,192,0.4)&quot;,</span><br><span class="line">// 设置边框颜色</span><br><span class="line">borderColor: &quot;rgba(75,192,192,1)&quot;,</span><br><span class="line">// 设置折线端点的样式</span><br><span class="line">borderCapStyle: &apos;butt&apos;,</span><br><span class="line">// 破折号的长度和间距</span><br><span class="line">borderDash: [],</span><br><span class="line">// 破折号的偏移量</span><br><span class="line">borderDashOffset: 0.0,</span><br><span class="line">// 设置折线交点的样式</span><br><span class="line">borderJoinStyle: &apos;miter&apos;,</span><br><span class="line">// 设置折线数据点的边框颜色</span><br><span class="line">pointBorderColor: &quot;rgba(75,192,192,1)&quot;,</span><br><span class="line">// 设置折线数据点的背景颜色</span><br><span class="line">pointBackgroundColor: &quot;#fff&quot;,</span><br><span class="line">// 设置折线数据点的边框宽度</span><br><span class="line">pointBorderWidth: 1,</span><br><span class="line">// 设置当鼠标悬停折线数据点时的半径</span><br><span class="line">pointHoverRadius: 5,</span><br><span class="line">// 设置当鼠标悬停折线数据点时的背景颜色</span><br><span class="line">pointHoverBackgroundColor: &quot;rgba(75,192,192,1)&quot;,</span><br><span class="line">// 设置当鼠标悬停折线数据点时的边框颜色</span><br><span class="line">pointHoverBorderColor: &quot;rgba(220,220,220,1)&quot;,</span><br><span class="line">// 设置当鼠标悬停折线数据点时的边框宽度</span><br><span class="line">pointHoverBorderWidth: 2,</span><br><span class="line">// 设置折线数据点的半径</span><br><span class="line">pointRadius: 1,</span><br><span class="line">//</span><br><span class="line">pointHitRadius: 10,</span><br><span class="line">// 设置折线中所有的数据</span><br><span class="line">data: [65, 59, 80, 81, 56, 55, 40],</span><br><span class="line">// 如果设置为true，将在没有数据或空数据的点之间绘制直线</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">label: &quot;第二条数据&quot;,</span><br><span class="line">// 是否填充折线与水平轴中间的区域</span><br><span class="line">fill: true,</span><br><span class="line">// 设置折线数据点的贝塞尔曲线值（值为0时为折线）</span><br><span class="line">lineTension: 0.1,</span><br><span class="line">// 设置背景颜色</span><br><span class="line">backgroundColor: &quot;rgba(175,192,192,0.4)&quot;,</span><br><span class="line">// 设置边框颜色</span><br><span class="line">borderColor: &quot;rgba(175,192,192,1)&quot;,</span><br><span class="line">// 设置折线端点的样式</span><br><span class="line">borderCapStyle: &apos;butt&apos;,</span><br><span class="line">// 破折号的长度和间距</span><br><span class="line">borderDash: [],</span><br><span class="line">// 破折号的偏移量</span><br><span class="line">borderDashOffset: 0.0,</span><br><span class="line">// 设置折线交点的样式</span><br><span class="line">borderJoinStyle: &apos;miter&apos;,</span><br><span class="line">// 设置折线数据点的边框颜色</span><br><span class="line">pointBorderColor: &quot;rgba(175,192,192,1)&quot;,</span><br><span class="line">// 设置折线数据点的背景颜色</span><br><span class="line">pointBackgroundColor: &quot;#fff&quot;,</span><br><span class="line">// 设置折线数据点的边框宽度</span><br><span class="line">pointBorderWidth: 1,</span><br><span class="line">// 设置当鼠标悬停折线数据点时的半径</span><br><span class="line">pointHoverRadius: 5,</span><br><span class="line">// 设置当鼠标悬停折线数据点时的背景颜色</span><br><span class="line">pointHoverBackgroundColor: &quot;rgba(75,192,192,1)&quot;,</span><br><span class="line">// 设置当鼠标悬停折线数据点时的边框颜色</span><br><span class="line">pointHoverBorderColor: &quot;rgba(220,220,220,1)&quot;,</span><br><span class="line">// 设置当鼠标悬停折线数据点时的边框宽度</span><br><span class="line">pointHoverBorderWidth: 2,</span><br><span class="line">// 设置折线数据点的半径</span><br><span class="line">pointRadius: 1,</span><br><span class="line">//</span><br><span class="line">pointHitRadius: 10,</span><br><span class="line">// 设置折线中所有的数据</span><br><span class="line">data: [28, 48, 40, 19, 86, 27, 90]</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">   var options = &#123;</span><br><span class="line">     //轴</span><br><span class="line">scales: &#123;</span><br><span class="line">xAxes: [&#123;</span><br><span class="line"></span><br><span class="line">&#125;],</span><br><span class="line">yAxes: [&#123;</span><br><span class="line">ticks: &#123;</span><br><span class="line">beginAtZero: true</span><br><span class="line">&#125;,</span><br><span class="line">gridLines: &#123;</span><br><span class="line">color: &apos;#FFF&apos;</span><br><span class="line">&#125;</span><br><span class="line">&#125;]</span><br><span class="line">&#125;,</span><br><span class="line">//标题</span><br><span class="line">title: &#123;</span><br><span class="line">display: true,</span><br><span class="line">text: &apos;Custom Chart Title&apos;</span><br><span class="line">&#125;,</span><br><span class="line">//配置</span><br><span class="line">legend: &#123;</span><br><span class="line">display: true,</span><br><span class="line">labels: &#123;</span><br><span class="line">fontColor: &apos;rgb(255, 99, 132)&apos;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">//动画</span><br><span class="line">animation: &#123;</span><br><span class="line">duration: 1000</span><br><span class="line">&#125;,</span><br><span class="line">//提示</span><br><span class="line">tooptips: &#123;</span><br><span class="line">enable: true,</span><br><span class="line">backgroundColor: &apos;#ff0&apos;</span><br><span class="line">&#125;，</span><br><span class="line">//布局</span><br><span class="line">layout: &#123;</span><br><span class="line">         padding: &#123;</span><br><span class="line">             left: 50,</span><br><span class="line">             right: 0,</span><br><span class="line">             top: 0,</span><br><span class="line">             bottom: 0</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>圆形图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">   var data = &#123;</span><br><span class="line">datasets: [&#123;</span><br><span class="line">data: [28, 48, 40, 119, 86, 27, 90],</span><br><span class="line">backgroundColor: [</span><br><span class="line">&apos;#00f&apos;,</span><br><span class="line">&apos;#0f0&apos;,</span><br><span class="line">&apos;#f00&apos;,</span><br><span class="line">&apos;#ff0&apos;,</span><br><span class="line">&apos;#0ff&apos;,</span><br><span class="line">&apos;#f0f&apos;,</span><br><span class="line">&apos;#d33&apos;,</span><br><span class="line">]</span><br><span class="line">&#125;],</span><br><span class="line">// These labels appear in the legend and in the tooltips when hovering different arcs</span><br><span class="line">labels: [</span><br><span class="line">&apos;Red&apos;,</span><br><span class="line">&apos;Yellow&apos;,</span><br><span class="line">&apos;Blue&apos;,</span><br><span class="line">&apos;Redq&apos;,</span><br><span class="line">&apos;Yellows&apos;,</span><br><span class="line">&apos;Blues&apos;,</span><br><span class="line">&apos;Blued&apos;</span><br><span class="line">]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> var options= &#123;</span><br><span class="line">scale: &#123;</span><br><span class="line">gridLines: &#123;</span><br><span class="line">color: &apos;#FFF&apos;,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p>文档１<br><a href="https://segmentfault.com/a/1190000008498664" target="_blank" rel="noopener">https://segmentfault.com/a/1190000008498664</a><br>文档2：<br><a href="https://www.chartjs.org/docs/latest/" target="_blank" rel="noopener">https://www.chartjs.org/docs/latest/</a><br>文档3：<br><a href="http://chartjs.cn/docs/#line-chart-introduction" target="_blank" rel="noopener">http://chartjs.cn/docs/#line-chart-introduction</a></p><h2 id="列子"><a href="#列子" class="headerlink" title="列子"></a>列子</h2><p>dome查看 <a href="https://zbimbaloo.github.io/bimbaloo/dome/H5/index.html">https://zbimbaloo.github.io/bimbaloo/dome/H5/index.html</a></p>]]></content>
      
      
      <categories>
          
          <category> RC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery图片延迟加载插件jQuery.lazyload</title>
      <link href="/xiaocong/2019/03/10/Lazyload/"/>
      <url>/xiaocong/2019/03/10/Lazyload/</url>
      
        <content type="html"><![CDATA[<p>插件描述：jQuery图片延迟加载插件jQuery.lazyload,使用延迟加载在可提高网页下载速度。在某些情况下，它也能帮助减轻服务器负载。</p><p>使用方法</p><p>引用jquery和jquery.lazyload.js到你的页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;jquery-1.11.0.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;jquery.lazyload.js?v=1.9.1&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>html图片调用方法</p><p>为图片加入样式lazy &nbsp;图片路径引用方法用data-original</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/bmw_m1_hood.jpg&quot;&gt;</span><br><span class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/bmw_m1_side.jpg&quot;&gt;</span><br><span class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/viper_1.jpg&quot;&gt;</span><br><span class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/viper_corner.jpg&quot;&gt;</span><br><span class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/bmw_m3_gt.jpg&quot;&gt;</span><br><span class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/corvette_pitstop.jpg&quot;&gt;</span><br></pre></td></tr></table></figure><p>js出始化lazyload并设置图片显示方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;</span><br><span class="line">  $(function() &#123;</span><br><span class="line">      $(&quot;img.lazy&quot;).lazyload(&#123;effect: &quot;fadeIn&quot;&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在图片中也可以不使用 class="lazy"，初始化时使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;img&quot;).lazyload(&#123;effect: &quot;fadeIn&quot;&#125;);</span><br></pre></td></tr></table></figure><p>如果想提载入图片，可以使用 threshold 进行设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;img.lazy&quot;).lazyload(&#123; threshold :180&#125;);</span><br></pre></td></tr></table></figure><p>以上实例的含义是：在图片距离屏幕180px时提前载入：</p><p>参数设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;img.lazy&quot;).lazyload(&#123;</span><br><span class="line">  placeholder : &quot;img/grey.gif&quot;, //用图片提前占位</span><br><span class="line">    // placeholder,值为某一图片路径.此图片用来占据将要加载的图片的位置,待图片加载时,占位图则会隐藏</span><br><span class="line">  effect: &quot;fadeIn&quot;, // 载入使用何种效果</span><br><span class="line">    // effect(特效),值有show(直接显示),fadeIn(淡入),slideDown(下拉)等,常用fadeIn</span><br><span class="line">  threshold: 200, // 提前开始加载</span><br><span class="line">    // threshold,值为数字,代表页面高度.如设置为200,表示滚动条在离目标位置还有200的高度时就开始加载图片,可以做到不让用户察觉</span><br><span class="line">  event: &apos;click&apos;,  // 事件触发时才加载</span><br><span class="line">    // event,值有click(点击),mouseover(鼠标划过),sporty(运动的),foobar(…).可以实现鼠标莫过或点击图片才开始加载,后两个值未测试…</span><br><span class="line">  container: $(&quot;#container&quot;),  // 对某容器中的图片实现效果</span><br><span class="line">    // container,值为某容器.lazyload默认在拉动浏览器滚动条时生效,这个参数可以让你在拉动某DIV的滚动条时依次加载其中的图片</span><br><span class="line">  failurelimit : 10 // 图片排序混乱时</span><br><span class="line">     // failurelimit,值为数字.lazyload默认在找到第一张不在可见区域里的图片时则不再继续加载,但当HTML容器混乱的时候可能出现可见区域内图片并没加载出来的情况,failurelimit意在加载N张可见区域外的图片,以避免出现这个问题.</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>dome查看 <a href="https://zbimbaloo.github.io/bimbaloo/dome/jquery.lazyLoad.js/lazyload.html">https://zbimbaloo.github.io/bimbaloo/dome/jquery.lazyLoad.js/lazyload.html</a></p>]]></content>
      
      
      <categories>
          
          <category> js插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LAYDATE日历插件使用</title>
      <link href="/xiaocong/2019/03/06/LaydateJs/"/>
      <url>/xiaocong/2019/03/06/LaydateJs/</url>
      
        <content type="html"><![CDATA[<p>LAYDATE日历插件使用</p><p>A npm version of laydate from <a href="http://www.layui.com/doc/modules/laydate.html" target="_blank" rel="noopener">laydate</a></p><h2 id="npm-命令"><a href="#npm-命令" class="headerlink" title="npm 命令:"></a>npm 命令:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save laydate</span><br></pre></td></tr></table></figure><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"mydate"</span> <span class="attr">id</span>=<span class="string">"mydate"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> laydate = <span class="built_in">require</span>(<span class="string">"laydate"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//init date</span></span><br><span class="line">laydate(&#123;</span><br><span class="line">elem: <span class="string">'#mydate'</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//reset </span></span><br><span class="line">laydate.reset();</span><br></pre></td></tr></table></figure><p>支持的选项    </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">     elem: <span class="string">'#id'</span>, <span class="comment">//需显示日期的元素选择器</span></span><br><span class="line">     event: <span class="string">'click'</span>, <span class="comment">//触发事件</span></span><br><span class="line">     format: <span class="string">'YYYY-MM-DD hh:mm:ss'</span>, <span class="comment">//日期格式</span></span><br><span class="line">     istime: <span class="literal">false</span>, <span class="comment">//是否开启时间选择</span></span><br><span class="line">     isclear: <span class="literal">true</span>, <span class="comment">//是否显示清空</span></span><br><span class="line">     istoday: <span class="literal">true</span>, <span class="comment">//是否显示今天</span></span><br><span class="line">     issure: <span class="literal">true</span>, 是否显示确认</span><br><span class="line">     festival: <span class="literal">true</span> <span class="comment">//是否显示节日</span></span><br><span class="line">     min: <span class="string">'1900-01-01 00:00:00'</span>, <span class="comment">//最小日期</span></span><br><span class="line">     max: <span class="string">'2099-12-31 23:59:59'</span>, <span class="comment">//最大日期</span></span><br><span class="line">     start: <span class="string">'2014-6-15 23:00:00'</span>,  <span class="comment">//开始日期</span></span><br><span class="line">     fixed: <span class="literal">false</span>, <span class="comment">//是否固定在可视区域</span></span><br><span class="line">     zIndex: <span class="number">99999999</span>, <span class="comment">//css z-index</span></span><br><span class="line">     choose: <span class="function"><span class="keyword">function</span>(<span class="params">dates</span>)</span>&#123; <span class="comment">//选择好日期的回调</span></span><br><span class="line">    </span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>更多查看  <a href="http://www.layui.com/doc/modules/layer.html" target="_blank" rel="noopener">http://www.layui.com/doc/modules/layer.html</a><br>dome查看 <a href="https://zbimbaloo.github.io/bimbaloo/dome/laydate/test/test.html">https://zbimbaloo.github.io/bimbaloo/dome/laydate/test/test.html</a></p>]]></content>
      
      
      <categories>
          
          <category> js插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见的js插件库2</title>
      <link href="/xiaocong/2019/03/06/Jsk/"/>
      <url>/xiaocong/2019/03/06/Jsk/</url>
      
        <content type="html"><![CDATA[<p>常见的js插件库</p><h2 id="包管理器"><a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h2><p>管理着 JavaScript 库，并提供读取和打包它们的工具。</p><p>npm：npm 是 JavaScript 的包管理器。<br>Bower：一个 web 应用的包管理器。<br>component：能构建更好 web 应用的客户端包管理器。<br>spm：全新的静态包管理器。<br>jam：一个专注于浏览器端和兼容 RequireJS 的包管理器。<br>jspm：流畅的浏览器包管理器。<br>Ender：没有库文件的程序库。<br>volo：以项目模板、添加依赖项与自动化生成的方式创建前端项目。<br>Duo：一个整合 Component、Browserify 和 Go 的最佳思想，使开发者能快速方便地组织和编写前端代码的下一代包管理器。</p><h2 id="加载器"><a href="#加载器" class="headerlink" title="加载器"></a>加载器</h2><p>JavaScript 的模块或加载系统。</p><p>RequireJS：JavaScript 文件和模块的加载器。<br>browserify：在浏览器端以 node.js 的方式 require()。<br>SeaJS：用于 Web 的模块加载器。<br>HeadJS：HEAD 的唯一脚本。<br>curl：小巧、快速且易扩展的模块加载器，它能处理 AMD、CommonJS Modules/1.1、CSS、HTML/text 和历史脚本。<br>lazyload：小巧且无依赖的异步 JavaScript 和 CSS 加载器。<br>script.js：异步 JavaScript 加载器和依赖管理器。<br>systemjs：AMD、CJS（commonJS） 和符合 ES6 规范的模块加载器。<br>LodJS：基于 AMD 的模块加载器。<br>ESL：浏览器端的模块加载器，支持延迟定义和 AMD。<br>modulejs：轻量的 JavaScript 模块系统。</p><h2 id="打包工具"><a href="#打包工具" class="headerlink" title="打包工具"></a>打包工具</h2><p>browserify ：Browserify 让你能在浏览器端使用 require(‘modules’) ，打包所有依赖。<br>webpack：为浏览器打包 CommonJs/AMD 模块。<br>gulp：用自动化构建工具增强你的工作流程！<br>rollup: JavaScript 模块打包器!  中文</p><h2 id="测试框架"><a href="#测试框架" class="headerlink" title="测试框架"></a>测试框架</h2><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><p>mocha：适用于 node.js 和浏览器、简易、灵活、有趣的 JavaScript 测试框架。<br>jasmine：简单无 DOM 的 JavaScript 测试框架。<br>qunit：一个易于使用的 JavaScript 单元测试框架。<br>jest：简单的 JavaScript 单元测试框架。<br>prova：基于 Tape 和 Browserify 的测试运行器，它适用于 Node &amp; 浏览器。<br>DalekJS：自动化且跨浏览器的 JavaScript 功能测试框架。</p><h2 id="断言"><a href="#断言" class="headerlink" title="断言"></a>断言</h2><p>chai：适用于 node.js 和浏览器的 BDD / TDD 断言框架，并能搭配其它测试框架使用。<br>Sinon.JS：对 JavaScript 进行 spies、stubs 和 mock 测试。<br>expect.js：简约的、适用于 Node.js 和浏览器端的 BDD 式断言工具。<br>should.js：适用于 Node.js 的 BDD 式断言工具。</p><h2 id="覆盖率"><a href="#覆盖率" class="headerlink" title="覆盖率"></a>覆盖率</h2><p>istanbul：另一个 JS 代码覆盖率检测工具。<br>blanket：一个简单的代码覆盖率检测库。它的设计理念是易于安装和使用，且可用于浏览器端和 node.js。<br>JSCover：JSCover 是一个检测 JavaScript 程序代码覆盖率的工具。</p><h2 id="运行器"><a href="#运行器" class="headerlink" title="运行器"></a>运行器</h2><p>phantomjs：脚本化的 Headless WebKit。<br>slimerjs：一个内核为 Gecko 的类似 PhantomJS 工具。<br>casperjs：基于 PhantomJS 和 Slimer JS 的导航脚本和测试工具。<br>zombie：基于 node.js 、快速、全栈且无图形界面的浏览器的测试工具。<br>totoro：一个简单可靠且能跨浏览器运行的测试工具。<br>karma：一个优秀的的 JavaScript 测试运行器。<br>nightwatch：基于 node.js 和 selenium webdriver 的图形界面自动化测试框架。<br>intern：下一代 JavaScript 代码测试栈。<br>yolpo：在浏览器逐句执行的 JavaScript 解释器。</p><h2 id="QA-工具"><a href="#QA-工具" class="headerlink" title="QA 工具"></a>QA 工具</h2><p>JSHint：JSHint 是一个有助于发现 JavaScript 代码错误和潜在问题的工具。<br>jscs：JavaScript 代码风格检测工具。<br>jsfmt：格式化、搜索和改写 JavaScript。<br>jsinspect：检测复制粘贴和结构类似的代码。<br>buddy.js：发现 JavaScript 代码里的 魔术数字。<br>ESLint：完全插件化的工具，能在 JavaScript 中识别和记录模式。<br>JSLint ：高标准、严格和固执的代码质量工具，旨在只保持语言的优良部分。</p><h2 id="MVC-框架和库"><a href="#MVC-框架和库" class="headerlink" title="MVC 框架和库"></a>MVC 框架和库</h2><p>angular.js：为网络应用增强 HTML。<br>aurelia：一个适用于移动设备、桌面电脑和 web 的客户端 JavaScript 框架。<br>backbone：给你的 JS 应用加入带有 Models、Views、Collections 和 Events 的 Backbone。<br>batman.js：最适合 Rails 开发者的 JavaScript 框架。<br>ember.js：一个旨在创建非凡 web 应用的 JavaScript 框架。<br>meteor：一个超简单的、数据库无处不在的、只传输数据的纯 JavaScript web 框架。<br>ractive：新一代 DOM 操作。<br>vue：一个用于构建可交互界面的、直观快速和可组合的 MVVM 框架。<br>knockout：Knockout 用 JavaScript 让创建响应式的富 UI 更加容易。<br>spine：构建 JavaScript 应用的轻量 MVC 库。<br>espresso.js：一个极小的、用于制作用户界面的 JavaScript 库。<br>canjs：让 JS 更好、更快、更简单。<br>react：用于建构用户界面的库。它是声明式的、高效的和极度灵活的，并使用虚拟 DOM 作为其不同的实现。<br>react-native：一个用 React 构建原生应用的框架。<br>riot：类 React 库，但很轻量。<br>thorax：加强你的 Backbone。<br>chaplin：使用 Backbone.js 库的 JavaScript 应用架构。<br>marionette：一个 Backbone.js 的复合应用程序库，旨在简化大型 JavaScript 应用结构。<br>ripple：一个小巧的、用于构建响应界面的基础框架。<br>rivets：轻量却拥有强大的数据绑定和模板解决方案<br>derby：让编写实时和协同应用更简单的 MVC 框架，能够在 Node.js 和浏览器同时运行。<br>derby-awesome：很棒的 derby 组件集合。<br>way.js：简单、轻量、持久化的双向数据绑定。<br>mithril.js：Mithril 是一个客户端 MVC 框架（轻量、强大和快速）<br>jsblocks：jsblocks 是一个更好的 MV-ish 框架。<br>LiquidLava：易懂的、用于构建用户界面的 MVC 框架。<br>Electron：用Html、CSS和JavaScript构建跨平台的客户端应用程序。、GitHub<br>基于 Node 的 CMS 框架<br>KeystoneJS：强大的 CMS 和 web 应用框架。<br>Reaction Commerce：拥有实时的架构和设计的响应式（reactive） CMS。<br>Ghost：简单、强大的发布平台。<br>Apostrophe：提供内容编辑和基本服务的 CMS。<br>We.js：适用于实时应用、网站或博客的框架。<br>Hatch.js：拥有社交特性的 CMS 平台。<br>TaracotJS：拥有快速、极简风格特点且基于Node.js 的 CMS。<br>Nodizecms：为 CoffeeScript 爱好者准备的 CMS。<br>Cody：拥有所见即所得的编辑器的 CMS。<br>PencilBlue：CMS 和博客平台。</p><h2 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h2><h2 id="模板引擎允许您执行字符串插值。"><a href="#模板引擎允许您执行字符串插值。" class="headerlink" title="模板引擎允许您执行字符串插值。"></a>模板引擎允许您执行字符串插值。</h2><p>mustache.js：是 JavaScript 中带有  的最简模板。<br>handlebars.js：是 Mustache 模板语言的扩展。<br>hogan.js：是 Mustache 模板语言的编译器。<br>doT：最快速简洁的 JavaScript 模板引擎，适用于 nodejs 和浏览器。<br>dustjs：适用于浏览器和 node.js 的异步模板。<br>eco：嵌入式的 CoffeeScript 模板。<br>JavaScript-Templates：轻量（小于 1KB）、快速且无依赖的强大 JavaScript 模版引擎。<br>t.js：小巧的 JavaScript 模板框架，压缩后约为 400 字节。<br>pug：健壮的、优雅且功能丰富的 nodejs 模板引擎。<br>EJS：高效的 JavaScript 模板。<br>xtemplate：可扩展的模板引擎，适用于 node 和浏览器。<br>marko：快速轻量且基于 HTML 的模板引擎，支持异步、流、自定义标签和 CommonJS 模编译后输出。适用于 Node.js 和浏览器。<br>Flux<br>Flux是Facebook用来构建客户端Web应用的应用架构</p><p>Reflux是根据React的flux创建的单向数据流类库。<br>Redux是可预测javascript应用程序状态的容器。<br>Mobx是通过透明的函数响应式编程实现简单，可扩展的状态管理库。<br>Dva是基于Redux, Redux-saga 和 <a href="mailto:react-router@2.x" target="_blank" rel="noopener">react-router@2.x</a>的轻量级的框架。</p><h2 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h2><h2 id="数据可视化工具"><a href="#数据可视化工具" class="headerlink" title="数据可视化工具"></a>数据可视化工具</h2><p>d3：一个对 HTML 和 SVG 进行可视化的 JavaScript 库。<br>metrics-graphics：更简洁和拥有更规范的数据图表布局优化算法的库。<br>pykcharts.js：经过精心设计后，去除 d3.js 复杂性的 d3.js 图表库。<br>three.js：JavaScript 3D 库。<br>Chart.js：简单的、基于 canvas 标签的 HTML5 图表库。<br>paper.js：是矢量图形脚本中的瑞士军刀 —— 使用 HTML5 Canvas 将 Scriptographer 移植到 JavaScript 和浏览器。<br>fabric.js：JavaScript Canvas 库，SVG 与 Canvas 可以相互解析。<br>peity：进度条、线状和饼状图。<br>raphael：JavaScript 矢量库。<br>echarts：商业产品图表。<br>vis：动态的、基于浏览器的可视化库。<br>two.js：一个渲染器无关的适用于 web 的二维绘图 api 。<br>g.raphael：基于 Raphaël 图表库。<br>sigma.js：一个致力于图形绘画的 JavaScript 库。<br>arbor：一个使用 web workers 和 jQuery 的图形可视化库。<br>cubism：可视化时间序列的 D3 插件。<br>dc.js：与 crossfilter 无缝合作的多维图表绘制库，使用 d3.js 渲染。<br>vega：一套可视化语法。<br>processing.js：Processing.js 基于 Web 标准使数据可视化，而无需任何插件。<br>envisionjs：动态的 HTML5 可视化。<br>rickshaw：用于构建交互式实时图表的 JavaScript 工具包。<br>flot：吸引人的、基于 jQuery 的 JavaScript 图表库。<br>morris.js：漂亮的时间序列线框图。<br>nvd3：一个为 D3.js 构建可复用图表和图表组件的库。<br>svg.js：一个轻量的、用于操作和添加 SVG 动画的库。<br>heatmap.js：基于 HTML5 canvas 的热力图 JavaScript 库。<br>jquery.sparkline：一个直接在浏览器端生成小型走势图的 jQuery 插件。<br>xCharts：一个基于 D3、用于构建自定义图表和图形的库。<br>trianglify：基于 d3.js 的低多边形（low poly）风格背景图片生成器。<br>d3-cloud：创建词云（word cloud）效果的 JavaScript 库。<br>d4：一个基于 D3 、友好、可复用的 DSL 图表库 。<br>dimple.js：基于 d3 的简易商业分析图表库。<br>chartist-js：简单的响应式图表。<br>epoch：一个通用的实时图表库。<br>c3：基于 D3 的可复用图表库。<br>BabylonJS：一个运用 HTML5 和 WebGL 构建 3D 游戏的框架。<br>jquery.raty.js：一个星级评分插件。<br>也有一些很棒的收费库，如 amchart、plotly 和 highchart。</p><h2 id="时间轴"><a href="#时间轴" class="headerlink" title="时间轴"></a>时间轴</h2><p>TimelineJS： 一个用 JavaScript 编写的可叙事时间轴库。<br>timesheet.js：用于构建简单的 HTML5 &amp; CSS3 时间表的 JavaScript 库。</p><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><p>ace：Ace（Ajax.org Cloud9 Editor）。<br>CodeMirror：浏览器端的代码编辑器。<br>esprima：用于综合分析的 ECMAScript 解析器。<br>quill：一个带有 API 的跨浏览器富文本编辑器。()<br>medium-editor：Medium.com 所见即所得编辑器的克隆版。<br>pen：享受在线编辑（支持 markdown）。<br>jquery-notebook：一个易用的、简洁优雅的文本编辑器。灵感来源于 Medium 的魅力。<br>bootstrap-wysiwyg：小巧的、兼容 bootstrap 的所见即所得的富文本编辑器。<br>ckeditor-releases：适用于每个人的 web 文本编辑器。<br>editor：一个 markdown 编辑器，但仍在开发中。<br>EpicEditor：一个可嵌入的 JavaScript Markdown 的编辑器，拥有全屏编辑、即时预览、自动保存草稿和离线支持等功能。<br>jsoneditor：查看、编辑和格式化 JSON 的 web 工具。<br>vim.js： 拥有持久化 ~/.vimrc 的 Vim 编辑器的 JavaScript 移植版本。<br>Squire：HTML5 富文本编辑器。<br>TinyMCE：JavaScript 富文本编辑器。<br>trix：由 Basecamp 制作，适用于每天写作的富文本编辑器。</p><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><h2 id="处理文件的库。"><a href="#处理文件的库。" class="headerlink" title="处理文件的库。"></a>处理文件的库。</h2><p>Papa Parse：一款强大的 CSV 库，支持解析 CSV 文件/字符串，也能导出 CSV。<br>jBinary：对用声明式语法描述文件类型和数据结构的二进制文件，进行高级 I/O（加载、解析、操作、序列化、存储）操作。</p><h2 id="函数式编程"><a href="#函数式编程" class="headerlink" title="函数式编程"></a>函数式编程</h2><h2 id="函数式编程库扩展了-JavaScript-的能力。"><a href="#函数式编程库扩展了-JavaScript-的能力。" class="headerlink" title="函数式编程库扩展了 JavaScript 的能力。"></a>函数式编程库扩展了 JavaScript 的能力。</h2><p>underscore：JavaScript 的实用工具。<br>lodash：提供一致性、可定制、高性能和额外功能的实用库。<br>Sugar：一个扩展了原生对象功能的 JavaScript 库。<br>lazy.js：类似 Underscore，但性能更优越<br>ramda：一个针对 JavaScript 程序员的实用函数库。<br>mout：模块化的 JavaScript 工具库。<br>mesh：流数据同步工具。</p><h2 id="响应式编程"><a href="#响应式编程" class="headerlink" title="响应式编程"></a>响应式编程</h2><h2 id="响应式程序库扩展了-JavaScript-的能力。"><a href="#响应式程序库扩展了-JavaScript-的能力。" class="headerlink" title="响应式程序库扩展了 JavaScript 的能力。"></a>响应式程序库扩展了 JavaScript 的能力。</h2><p>RxJs：对 JavaScript 进行响应式扩展。<br>Bacon：JavaScript 的 FPR（函数式响应式编程）库。<br>Kefir：受 Bacon.js 和 RxJS 启发的 FRP 库，专注于高性能和低内存消耗。<br>Highland：对 JavaScript 实用工具的重新思考，Highland 能轻易地管理同步和异步信息，而且仅使用标准 JavaScript 和类 Node 流。<br>Most.js：高性能 FRP 库。</p><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h2 id="数据结构库用于构建一个更复杂的应用。"><a href="#数据结构库用于构建一个更复杂的应用。" class="headerlink" title="数据结构库用于构建一个更复杂的应用。"></a>数据结构库用于构建一个更复杂的应用。</h2><p>immutable-js：不可变的数据集合，包括 Sequence、Range、Repeat、Map、OrderedMap、Set 和 sparse Vector。<br>mori：使用 ClojureScript 持久化数据结构和支持原生 JavaScript API 的库。<br>buckets：完整的、经过充分测试和记录数据结构的 JavaScript 库。<br>hashmap：简单的 hashmap 实现，支持任何类型的键值。</p><h2 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h2><h2 id="日期库。"><a href="#日期库。" class="headerlink" title="日期库。"></a>日期库。</h2><p>moment：解析、验证、操作和显示日期。<br>moment-timezone：基于 moment.js 的时区库。<br>jquery-timeago：一款支持自动更新模糊时间戳的 jQuery 插件（如：”4 分钟之前”）。<br>timezone-js：让 JavaScript Date 对象拥有时区功能。使用 Olson zoneinfo 文件记录着时区数据。<br>date：拥有人性化的 Date() 方法。<br>ms.js：小巧的毫秒转换工具。<br>timeago.js：一个非常轻量级(~1.7 Kb)的用于将时间转化成xxx时间前格式，例如：8分钟前。</p><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h2 id="字符串库。"><a href="#字符串库。" class="headerlink" title="字符串库。"></a>字符串库。</h2><p>selecting：一个允许你获取用户选定文本的库。<br>underscore.string：扩展了 Underscore.js 的字符串操作。<br>string.js：额外的 JavaScript 字符串方法。<br>he：健壮的 HTML 实体编码/解码器。<br>multiline：多行字符串。<br>query-string：解析和字符串化 URL 查询字符串。<br>URI.js：URL 操作库。<br>jsurl：轻量的 URL 操作库。<br>sprintf.js：实现字符串格式化。<br>url-pattern：让 url 和其它字符串进行比正则表达式匹配更简单。字符串和数据可相互转化。</p><h2 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h2><p>Numeral-js：对数字进行格式化和操作的库。<br>odometer：流畅的数字过渡效果。<br>accounting.js：对数字、金钱、货币进行格式化的轻量库——完全本地化和无依赖。<br>money.js：一个小巧（1kb）的货币转换库，适用于 web 和 nodeJS。<br>Fraction.js：一个有理数库。<br>Complex.js： 一个复数库。<br>Polynomial.js：一个多项式库。</p><h2 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h2><p>store.js：为所有浏览器封装了 LocalStorage，而没有使用 cookies 和 flash。隐秘地使用 localStorage、globalStorage 和用户数据。<br>localForage：改善后的离线存储。其封装了 IndexedDB、WebSQL 和 localStorage，拥有操作简单和强大的 API。<br>jStorage：jStorage 是一个简单的键值对数据库，用于在浏览器端存储数据。<br>cross-storage：获得权限后，能跨域名本地存储。<br>basket.js：用 localStorage 加载和缓存脚本的资源加载器。<br>bag.js：可以缓存脚本和加载资源，与 basket.js 相似，但增加了键值对接口和对 localStorage / websql / undexedDB 的支持。<br>basil.js：智能的 JavaScript 数据持久层库。<br>jquery-cookie：轻量简单的、用于读取、编辑和删除 cookie 的 jQuery 插件。<br>Cookies：客户端 Cookie 操作库。<br>DB.js：基于 Promise 的、封装了 IndexedDB 的库。<br>lawnchair.js：简单的客户端 JSON 存储。</p><h2 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h2><p>randomColor：JavaScript 颜色生成器。<br>chroma.js：拥有各种各样颜色操作的 JavaScript 库。<br>color：JavaScript 颜色转换和操作库。<br>colors：更智能的默认 web 颜色。<br>PleaseJS：随机创建出赏心悦目的颜色和配色方案。<br>TinyColor：快速、轻巧的颜色操作和转换库。<br>Vibrant.js：从图像提取主要颜色。</p><h2 id="国际化和本地化（I18n-And-L10n）"><a href="#国际化和本地化（I18n-And-L10n）" class="headerlink" title="国际化和本地化（I18n And L10n）"></a>国际化和本地化（I18n And L10n）</h2><h2 id="本地化和国际化-JavaScript-库"><a href="#本地化和国际化-JavaScript-库" class="headerlink" title="本地化和国际化 JavaScript 库"></a>本地化和国际化 JavaScript 库</h2><p>i18next：JavaScript 最简单的国际化（i18n）方法。<br>polyglot：小巧的国际化助手库。<br>babelfish：i18n 提供友好易懂的 API ，并且内置多种支持。</p><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><p>ClassManager：世界上最快、最方便的类系统之一。<br>klass：用于创建极富表现力的类工具库。<br>augment：世界上最小且最快的一流 JavaScript 继承模式。</p><h2 id="控制流"><a href="#控制流" class="headerlink" title="控制流"></a>控制流</h2><p>async：适用于 node 和浏览器的异步工具库。<br>q：实现异步的 promise JavaScript 库。<br>step：让逻辑顺序合理化的异步控制流库。<br>contra：利用函数风格实现的异步流控制。<br>Bluebird：专注于革新功能和性能的，功能齐全的 promoise 库。<br>when：快速可靠的、Promises/A+ 规范的 when() 实现，而且拥有异步其它的优秀特性。<br>ObjectEventTarget：提供增加了事件监听的原型（与 DOMElement 的 EventTarget 在浏览器行为一致）。</p><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><p>director：一个小巧的、与 URL 同构的路由器。<br>page.js：受 Express router 启发的小型客户端路由器（约为1200字节）。<br>pathjs：简单、轻量的 web 路由器。<br>crossroads：JavaScript 路由。<br>davis.js：使用 pushState、RESTful 风格和可降级的 JavaScript 路由器。<br>angular-ui-router：基于AngularJS的可嵌套路由。<br>react-router: Declarative routing for React 官方<br>vue-router: Declarative routing for Vue 官方</p><h2 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h2><p>DOMPurify：针对 HTML、MathML 和 SVG 的仅支持DOM、快速、高容错的 XSS 过滤器。<br>js-xss：通过白名单配置，即可过滤不信任的 HTML（防止 XSS 攻击）。</p><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p>log：带有样式的 Console.log。<br>Conzole：对 JavaScript 原生 console 对象方法和功能进行封装的 debug 面板，使其显示在页面内。<br>console.log-wrapper：将日志清晰地记录到 console，且兼容所有浏览器。<br>loglevel：最轻量的 JavaScript 日志记录工具库，向封装后可用的 console.log 方法增加可靠的日志等级。<br>minilog：轻量的、用流式 API 显示的、可用于客户端和服务器端的日志记录库。</p><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>RegEx101：在线的 JavaScript 正则表达式测试器和调试器。同时支持 Python、PHP 和 PCRE。<br>RegExr：用于创建、测试和学习正则表达式的 HTML/JS 工具。<br>RegExpBuilder：使用链式方法创建正则表达式。</p><h2 id="媒体"><a href="#媒体" class="headerlink" title="媒体"></a>媒体</h2><p>Ion.Sound：可用于任何网页上简单音频。</p><h2 id="语音命令"><a href="#语音命令" class="headerlink" title="语音命令"></a>语音命令</h2><p>annyang：向网站添加语音命令的语音识别库。<br>voix.js：向网站、app 或游戏添加语音命令的 JavaScript 库。</p><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><p>bottleneck：强大的频率限制器，使调节流量变得更容易。<br>oauth-signature-js：适用于 node 和 浏览器的 OAuth 1.0a 签名生成器。<br>amygdala：为 Web 应用提供 RESTful HTTP 客户端解决方案。<br>jquery.rest：一个让 RESTful API 更易使用的 jQuery 插件。</p><h2 id="视觉检测"><a href="#视觉检测" class="headerlink" title="视觉检测"></a>视觉检测</h2><p>tracking.js：在 web 上实现计算视觉的一种现代方法。<br>ocrad.js：通过 Emscripten 用 JavaScript 实现 OCR（光学字符识别）。</p><h2 id="浏览器检测"><a href="#浏览器检测" class="headerlink" title="浏览器检测"></a>浏览器检测</h2><p>bowser：一个浏览器检测器。</p><h2 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h2><p>easy-monitor：一个轻量级实时 Node.js 项目的内核性能分析工具。</p><h2 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h2><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><p>Highlight.js：JavaScript 语法高亮器。<br>PrismJS：轻量、健壮和优雅的语法高亮器。</p><h2 id="加载状态"><a href="#加载状态" class="headerlink" title="加载状态"></a>加载状态</h2><h2 id="指示加载状态的库。"><a href="#指示加载状态的库。" class="headerlink" title="指示加载状态的库。"></a>指示加载状态的库。</h2><p>Mprogress.js：创建谷歌 Material 设计风格的线性进度条。<br>NProgress：在 Ajax　y 应用显示细长型进度条<br>Spin.js：一个旋转的进度指示器。<br>progress.js：为页面任何对象创建和管理进度条。<br>progressbar.js：用 SVG path 动画制作的、漂亮和响应式的进度条。<br>pace：自动向你的网站添加一个进度条。<br>topbar：小巧漂亮的、与网站同宽的进度指示器。<br>nanobar：非常轻量的进度条。不依赖 jQuery。<br>PageLoadingEffects：使用 SVG 动画展现新内容的现代方式。<br>SpinKit：运用 CSS 动画的加载指示器集合。<br>Ladda：内置在按钮的加载指示器。<br>css-loaders：运用 CSS 动画的旋转加载指示器的集合。<br>除了上述这些库，还有收藏在 Codepen 的，另外还有 Ajaxload，Preloaders 和 CSSLoad 这些生成器。</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>Parsley.js：不用写一行 JavaScript 代码即可在前端验证表单。<br>jquery-validation：jQuery 验证插件。<br>validator.js：字符串验证和过滤（在使用用户输入之前清理用户输入中的有害或危险字符的操作）。<br>validate.js：受 CodeIgniter 启发的轻量表单验证 JavaScript 库。<br>validatr：跨浏览器的 HTML5 表单验证库。<br>BootstrapValidator：是验证表单域中最好的 jQuery 插件。要与 Bootstrap 3 一起使用。<br>is.js：检查类型、正则表达式、是否存在、时间等。<br>FieldVal：多用途验证库。同时支持同步和异步验证。</p><h2 id="键盘封装器"><a href="#键盘封装器" class="headerlink" title="键盘封装器"></a>键盘封装器</h2><p>mousetrap：处理键盘快捷键的 JavaScript 库。<br>keymaster：定义和调度键盘快捷键的小型库。<br>Keypress：键入捕捉工具库，任何键都可以成为一个修饰健。<br>KeyboardJS：一个用于绑定键盘组合的 JavaScript 库，让你脱离快捷键和快捷键组合冲突的痛苦。<br>jquery.hotkeys：jQuery Hotkeys 能让你在代码任何的地方监听键盘事件，并几乎支持所有按键组合。<br>jwerty：令人惊叹的键盘事件处理库。</p><h2 id="浏览和引导"><a href="#浏览和引导" class="headerlink" title="浏览和引导"></a>浏览和引导</h2><p>intro.js：这是一个介绍新功能的很好方式，能一步步地引导用户浏览你的网站和项目。<br>shepherd：通过引导让用户浏览你的应用程序。<br>bootstrap-tour：应用 Twitter Bootstrap 弹出框对产品进行快速简单的引导。<br>tourist：简单、灵活的应用引导介绍库。<br>chardin.js：简单的应用遮罩层介绍。<br>pageguide：使用 jQuery 和 CSS3 的 web 页面元素交互引导库。<br>hopscotch：让开发者更容易向其页面产品添加引导的框架。<br>joyride：基于 jQuery 的功能引导插件。<br>focusable：通过向页面其余部分添加遮罩层，使焦点聚集在特定 DOM 元素。</p><h2 id="通知"><a href="#通知" class="headerlink" title="通知"></a>通知</h2><p>messenger：为你的应用添加 Growl-style 弹框和信息（Crowl 是 Mac OS X 下的一个通知系统）。<br>noty：jQuery 通知插件。<br>pnotify：适用于 Bootstrap、jQuery UI 和 Web Notifications Draft 的 JavaScript 通知库。<br>toastr：用来显示简单的，会自动到期的信息窗口）简单的弹出框通知（toast notifications<br>humane-js：一个简单、时髦的浏览器通知系统。<br>smoke.js：与框架无关的、能够自定义样式的 JavaScript 弹框系统。</p><h2 id="幻灯片"><a href="#幻灯片" class="headerlink" title="幻灯片"></a>幻灯片</h2><p>Swiper：使用硬件加速过渡的移动设备触控滑块框架。<br>slick：你所需要的最后一个轮播插件。<br>slidesJs：响应式的 jQuery（1.7.1+）幻灯片插件，具有触摸、 CSS3 过渡等特性。<br>FlexSlider：一款令人惊叹的、全响应式的幻灯片 jQuery 插件。<br>unslider：最简单的幻灯片 jQuery 插件。<br>colorbox：轻量、可自定义的灯箱 jQuery 插件。<br>fancyBox：提供了良好优雅的方式，为页面上的图片、html 内容和多媒体添加缩放功能的工具。<br>sly：基于项导航的、支持单向滚动的 JavaScript 库。<br>vegas：向页面添加漂亮的全屏背景的 jQuery 插件，甚至允许幻灯片。<br>Sequence：用于创建响应式的幻灯片、演示、旗帜广告和以步骤为基础的应用的 CSS 动画框架。<br>baguetteBox.js：易于使用的、用纯 JavaScript 实现的遮罩层脚本。<br>reveal.js：用 HTML 创建漂亮演示控件的框架。<br>PhotoSwipe：适用于移动设备和桌面电脑的、模块化和不无依赖框架的 JavaScript 画廊控件。<br>jcSlider：用 CSS 动画实现的响应式幻灯片 jQuery 插件。<br>basic-jquery-slider：易于使用、指定主题和定制化。<br>unslider： 这是最简单的幻灯片 jQuery 插件。<br>viewerjs：原生js实现的图片查看器。<br>jQuery.adaptive-slider：带有自适应颜色标题和导航的幻灯片 jQuery 插件。<br>slidr：可添加一些幻灯片效果。<br>Flickity：可触摸的、响应式的和可轻弹的画廊。</p><h2 id="滑块控件"><a href="#滑块控件" class="headerlink" title="滑块控件"></a>滑块控件</h2><p>Ion.RangeSlider：强大的、易于自定义的范围滑块选择库，支持很多配置和皮肤。<br>jQRangeSlider：支持日期的滑块选择库。<br>noUiSlider：轻量无冗余的、高度定制化的滑块选择库。<br>rangeslider.js：HTML5 input 区域滑块元素。</p><h2 id="表单组件"><a href="#表单组件" class="headerlink" title="表单组件"></a>表单组件</h2><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>typeahead.js：快速的、功能齐全的自动补全库。<br>tag-it：处理多标签字段以及标签建议/自动完成的 jQuery UI 插件。<br>At.js：向你的应用添加类似 Github 的自动完成提示功能。<br>Placeholders.js：JavaScript 补全 HTML5 占位符的属性。<br>fancyInput：利用 CSS3 效果让输入更有趣。<br>jQuery-Tags-Input：利用这个 jQuery 插件，可奇妙地将一个简单的文本输入转换成一个酷酷的标签列表。<br>vanilla-masker：一个纯 JavaScript 实现的输入控制库。<br>Ion.CheckRadio：一个为复选框和单选按钮添加样式的 jQuery 库，支持多种皮肤。</p><h2 id="日历"><a href="#日历" class="headerlink" title="日历"></a>日历</h2><p>pickadate.js：对移动设备友好的、响应式的和轻量的 jQuery 日期 &amp; 时间输入选择器。<br>bootstrap-datepicker：基于 bootstrap 的日历选择器。<br>Pikaday：一个崭新的 JavaScript 日期选择器 —— 轻量、无依赖和模块化的 CSS。<br>fullcalendar：全尺寸、支持拖放事件的日历（jQuery 插件）。<br>rome：可定制的日期（和时间）选择器。无依赖，可选 UI。<br>datedropper： datedropper 是一个 jQuery 插件，它提供了快速简易的方式去管理日期输入框。<br>flatpickr： flatpickr 是一个轻量、强大、无依赖的日历和时间选择器插件，支持移动端，并支持React、Ember、Angular和Vue。</p><h2 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h2><p>selectize.js：Selectize 是文本框和选择框的混合体。它基于jQuery，拥有自动完成和键盘感应下拉列表功能，可用于标签、联系人列表等。<br>select2：它基于 jQuery，是选择框（select box）的替代品。支持搜索、远程数据集和无限滚动。<br>chosen：可以让冗长不便的选择框更友好的库。</p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>jQuery-File-Upload：File Upload 是一个支持多文件选择、文件拖放、进度条、验证和图片、音频、视频预览的 jQuery 插件。<br>dropzone：Dropzone 是一个易于使用且支持多文件拖放的库。其支持图片预览并且拥有很好的进度条效果。<br>flow.js：一个通过 HTML5 的 File API ，提供多个同时链接的、稳定的、容错的、可恢复的/可重新开始的文件上传库。<br>fine-uploader：一个带有进度条、拖放功能和支持直接上传到 S3 （Amazon Simple Storage Service，亚马逊简易存储服务）的多文件上传插件。<br>FileAPI：JavaScript 文件工具集合。支持多文件上传、拖放和文件分块上传。对于图像，支持裁剪、调整大小和根据 EXIF自动调整方向。<br>plupload：处理文件上传的 JavaScript API，其支持多文件选择、文件类型过滤、分块请求、客户端图片缩放和根据不同的运行环境选择 HTML5、Silverlight 和 Flash。</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>form：jQuery 表单插件。<br>Garlic.js：自动在本地保存表单文本和选择框的值，直到表单被提交。<br>Countable：对某个 HTML 元素包含文本的段落数、单词数和字符数进行统计的 JavaScript 函数。<br>card：只需一行代码，让信用卡表单变得更友好。<br>stretchy：自适应大小的 form 元素，表单本应该是这样的。<br>list.js：向表格、列表等 HTML 元素添加搜索、排序、过滤和自适应功能的库。在已有 HTML 上增加可视化。 </p><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>tipsy：基于 jQuery 的 Fackbook 风格的提示工具（tooltip）。<br>opentip：开源且基于 prototype 框架的 JavaScript 工具提示库。<br>qTip2：非常强大的工具提示库。<br>tooltipster：一个工具提示 jQuery 插件。<br>simptip：用 Sass 制作的、简单的工具提示。<br>jquery-popup-overlay：是一个响应式的和可访问性强的模态框（modal）和工具提示框 jQuery 插件。</p><h2 id="模态框和弹出框"><a href="#模态框和弹出框" class="headerlink" title="模态框和弹出框"></a>模态框和弹出框</h2><p>Magnific-Popup：专注于性能、轻量、响应式的灯箱（lightbox）脚本。<br>jquery-popbox：jQuery 提示框插件。<br>jquery.avgrund.js：一种新的定于弹出的模态框 jQuery 插件。<br>vex：新的、拥有高度可配置和易于改变样式功能的对话框库。<br>bootstrap-modal：对 Bootstrap 默认的模态框类进行扩展。其支持响应式、可堆叠和 ajax 等。<br>css-modal：纯 CSS 打造的模态框。<br>jquery-popup-overlay：是一个响应式的和可访问性强的模态框和工具提示框（tooltips）jQuery 插件。<br>layer：国内最多人使用的web弹层组件。</p><h2 id="滚动"><a href="#滚动" class="headerlink" title="滚动"></a>滚动</h2><p>scrollMonitor：滚动发生时，可以监听元素的、简单、快速的 API。<br>headroom：除非你需要显示页面头部（header），否则将隐藏它，以腾出页面头部空间。<br>onepage-scroll：创建一个类似 Apple 的单页面滚动网站（iPhone 5S 网站）。<br>iscroll：高性能、轻量、无依赖、兼容多平台的 JavaScript 滚动组件。<br>skrollr：独立（不依赖 jQuery） 的视差滚动库，适用于移动设备（Android + iOS）和桌面电脑。<br>parallax：面向智能设备的视差引擎。<br>stellar.js：让视差滚动变简单。<br>plax：基于 jQuery 的视差库。<br>jparallax：创建可交互视差效果的 jQuery 插件。<br>fullPage：简单和易于使用的、用于创建全屏滚动网站的插件（也被称为单页面网站）。<br>ScrollMenu：让老旧无聊的滚动条焕然一新。</p><h2 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h2><p>jQuery-menu-aim：当用户光标放在特定下拉菜单项时触发事件。可制作响应式的、大数据量的下拉菜单，如 Amazon 的。<br>jQuery contextMenu：右键菜单（contextMenu） 管理工具。<br>Slideout：为移动设备的 web 应用制作出响应式的、可触摸滑出的导航菜单。<br>Slide and swipe：一个基于 touchSwipe 库的滑出菜单插件。</p><h2 id="表格-栅格"><a href="#表格-栅格" class="headerlink" title="表格/栅格"></a>表格/栅格</h2><p>jTable：基于 CRUD 表创建 AJAX 的 jQuery 插件。<br>DataTables：这是一个非常灵活的工具，在渐进增强的基础上，将高级的交互效果加到 HTML 表格。（jQuery 插件）<br>floatThead：（jQuery 插件）锁定表格头部，只允许表格内容滚动。适用于任何表格，而且不需要额外的 html 或 css。<br>Masonry：瀑布流式的网格布局库。<br>Packery：使用装箱算法（bin-packing）的网格布局库。支持拖拽布局。<br>Isotope：可过滤和可排序的网格布局的库，它能实现 Masonry、Packery 等布局。</p><h2 id="框架-1"><a href="#框架-1" class="headerlink" title="框架"></a>框架</h2><p>Semantic UI：拥有大量主题和元素的 UI 套件。</p><h2 id="手势"><a href="#手势" class="headerlink" title="手势"></a>手势</h2><p>hammer.js：拥有多种触摸手势的 JavaScript 库。<br>touchemulator：在桌面电脑模仿触摸输入。<br>Dragula：超级易于使用的拖拽库。</p><h2 id="触摸"><a href="#触摸" class="headerlink" title="触摸"></a>触摸</h2><p>fastclick.js：去除触屏用户300ms点击延误。<br>dropload.js：移动端下拉刷新，上拉加载更多。<br>touchslide.js：触屏滑动特效。</p><h2 id="地图"><a href="#地图" class="headerlink" title="地图"></a>地图</h2><p>Leaflet：对移动设备友好的、可交互的地图 JavaScript 库。<br>Cesium：开源的、基于 WebGL 实现的虚拟地球仪和地图引擎。<br>gmaps：以最简单的方式使用 Google 地图。<br>polymaps：一个免费的、兼容现代 web 浏览器的、用于制作动态可交互的地图 JavaScript 库。<br>kartograph.js：开源的 Kartograph SVG 地图渲染器。<br>mapbox.js：Mapbox 的 API，Leaflet 的插件。<br>jqvmap：矢量地图 jQuery 插件。<br>OpenLayers3：高性能的、功能丰富的库，能满足你对地图所有需求。</p><h2 id="视频-音频"><a href="#视频-音频" class="headerlink" title="视频/音频"></a>视频/音频</h2><p>prettyembed.js：更完美地嵌入 YouTube —— 拥有很好的选项，如高分辨率的预览图、嵌入选项的高级定制和可选的 FitVids 支持。<br>html5media：能在所有主流浏览器播放多媒体标签中定义的多媒体文件。<br>Play-em JS：Play’em 是一个 JavaScript 组件，它能管理音乐/视频播放顺序，通过在一个 DIV 元素里嵌入几个播放器（Youtube、Soundcloud 和 Vimeo）来控制一系列歌曲的播放。<br>polyplayer：将 YouTube、Soundcloud 和 Vimeo 播放器的 API 统一成一套。<br>flowplayer： HTML5 视频播放器 、Github<br>mediaelement：让 HTML5、 Flash 播放器和模仿 HTML5 媒介元素 API 的 Silverlight shim，在所有浏览器拥有一致的 UI。、Github<br>SoundJS：让音频在 web 上运行更简单的库。它为不同浏览器提供了一致的 API。</p><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><p>velocity：加速 JavaScript 动画。<br>jquery.transit：拥有超级流畅的 CSS3 变换和过渡的 jQuery 插件。<br>impess.js：在 HTML 文档里，运用 CSS3 变换和过渡制作类似 Prezi 的展现效果。<br>bounce.js：可以立刻创建有趣的 CSS3 动画。<br>GreenSock-JS：适用于所有主流浏览器的高性能 HTML5 动画。<br>TransitionEnd：TransitionEnd 是一个运用 transitonend 事件的、跨浏览器的库。<br>Dynamics.js：用于创建基于物理知识的 CSS 动画库。</p><h2 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h2><p>lena.js：拥有滤镜和实用功能的图像处理库。<br>pica：高质量地调整图片大小（拥有快速的、纯 JS 实现的 Lanczos 滤镜算法）。<br>cropper：一个简单的图像裁剪 jQuery 插件。<br>AlloyImage：腾讯前端开源的基于HTML5的专业级图像处理开源引擎。<br>ECMAScript 6<br>es6features：ECMAScript 6 特性概述。<br>es6-features：ECMAScript 6: 特性概述和比较。<br>ECMAScript 6 compatibility table ：Compatibility tables 展示了各种平台上所有 ECMAScript 6 特性的支持程度。<br>Babel (Formerly 6to5)：将 ES6+ 代码转换成纯 ES5。<br>Traceur compiler：ES6 特性转 ES5。包括 classes、generators、promises、destructuring patterns、default parameters 等。</p><h2 id="软件开发工具包-SDK"><a href="#软件开发工具包-SDK" class="headerlink" title="软件开发工具包(SDK)"></a>软件开发工具包(SDK)</h2><p>javascript-sdk-design：从工作和个人经验中提炼出来的 JavaScript SDK 设计指导。</p><h2 id="大杂烩"><a href="#大杂烩" class="headerlink" title="大杂烩"></a>大杂烩</h2><p>echo：利用 data-* 属性延迟加载图片。<br>picturefill：响应式图片显示插件，使浏览器支持 srcset、size 属性。<br>platform.js：一个平台检测库，几乎适用于所有 JavaScript 平台。<br>json3：一个现代 JSON 实现库，几乎兼容所有 JavaScript 平台。<br>Logical Or Not：一个关于 JavaScript 特性的游戏。<br>BitSet.js：实现位向量的 JavaScript 库。<br>Edge.js：运行在一个进程中运行.NET和Node.js代码。、GitHub</p>]]></content>
      
      
      <categories>
          
          <category> 汇总 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见的js插件库</title>
      <link href="/xiaocong/2019/03/06/Js/"/>
      <url>/xiaocong/2019/03/06/Js/</url>
      
        <content type="html"><![CDATA[<p>常见的js插件库</p><h2 id="MVC-框架和库"><a href="#MVC-框架和库" class="headerlink" title="MVC 框架和库"></a>MVC 框架和库</h2><p>•angular.js – 为网络应用增强 HTML。<br>•aurelia – 一个适用于移动设备、桌面电脑和 web 的客户端 JavaScript 框架。<br>•backbone – 给你的 JS 应用加入带有 Models、Views、Collections 和 Events 的 Backbone。<br>•batman.js – 最适合 Rails 开发者的 JavaScript 框架。<br>•ember.js – 一个旨在创建非凡 web 应用的 JavaScript 框架。<br>•meteor – 一个超简单的、数据库无处不在的、只传输数据的纯 JavaScript web 框架。<br>•ractive – 新一代 DOM 操作。<br>•vue – 一个用于构建可交互界面的、直观快速和可组合的 MVVM 框架。<br>•knockout – Knockout 用 JavaScript 让创建响应式的富 UI 更加容易。<br>•spine – 构建 JavaScript 应用的轻量 MVC 库。<br>•espresso.js – 一个极小的、用于制作用户界面的 JavaScript 库。<br>•canjs – 让 JS 更好、更快、更简单。<br>•react – 用于建构用户界面的库。它是声明式的、高效的和极度灵活的，并使用虚拟 DOM 作为其不同的实现。<br>•react-native – 一个用 React 构建原生应用的框架。<br>•riot – 类 React 库，但很轻量。<br>•thorax – 加强你的 Backbone。<br>•chaplin – 使用 Backbone.js 库的 JavaScript 应用架构。<br>•marionette – 一个 Backbone.js 的复合应用程序库，旨在简化大型 JavaScript 应用结构。<br>•ripple – 一个小巧的、用于构建响应界面的基础框架。<br>•rivets – 轻量却拥有强大的数据绑定和模板解决方案<br>•derby – 让编写实时和协同应用更简单的 MVC 框架，能够在 Node.js 和浏览器同时运行。 •derby-awesome – 很棒的 derby 组件集合。<br>•way.js – 简单、轻量、持久化的双向数据绑定。<br>•mithril.js – Mithril 是一个客户端 MVC 框架（轻量、强大和快速）<br>•jsblocks – jsblocks 是一个更好的 MV-ish 框架。<br>•LiquidLava – 易懂的、用于构建用户界面的 MVC 框架。</p><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><p>•The JavaScript that you should know – 关于 JavaScript 函数化概念的文章。</p><h2 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h2><h3 id="Web-数据可视化工具"><a href="#Web-数据可视化工具" class="headerlink" title="Web 数据可视化工具"></a>Web 数据可视化工具</h3><p>•d3 – 一个对 HTML 和 SVG 进行可视化的 JavaScript 库。<br>•metrics-graphics – 更简洁和拥有更规范的数据图表布局优化算法的库。<br>•pykcharts.js – 经过精心设计后，去除 d3.js 复杂性的 d3.js 图表库。<br>•three.js – JavaScript 3D 库。<br>•Chart.js – 简单的、基于 canvas 标签的 HTML5 图表库。<br>•paper.js – 是矢量图形脚本中的瑞士军刀 —— 使用 HTML5 Canvas 将 Scriptographer 移植到 JavaScript 和浏览器。<br>•fabric.js – JavaScript Canvas 库，SVG 与 Canvas 可以相互解析。<br>•peity – 进度条、线状和饼状图。<br>•raphael – JavaScript 矢量库。<br>•echarts – 商业产品图表。<br>•vis – 动态的、基于浏览器的可视化库。<br>•two.js – 一个渲染器无关的适用于 web 的二维绘图 api 。<br>•g.raphael – 基于 Rapha?l 图表库。<br>•sigma.js – 一个致力于图形绘画的 JavaScript 库。<br>•arbor – 一个使用 web workers 和 jQuery 的图形可视化库。<br>•cubism – 可视化时间序列的 D3 插件。<br>•dc.js – 与 crossfilter 无缝合作的多维图表绘制库，使用 d3.js 渲染。<br>•vega – 一套可视化语法。<br>•processing.js – Processing.js 基于 Web 标准使数据可视化，而无需任何插件。<br>•envisionjs – 动态的 HTML5 可视化。<br>•rickshaw – 用于构建交互式实时图表的 JavaScript 工具包。<br>•flot – 吸引人的、基于 jQuery 的 JavaScript 图表库。<br>•morris.js – 漂亮的时间序列线框图。<br>•nvd3 – 一个为 D3.js 构建可复用图表和图表组件的库。<br>•svg.js – 一个轻量的、用于操作和添加 SVG 动画的库。<br>•heatmap.js – 基于 HTML5 canvas 的热力图 JavaScript 库。<br>•jquery.sparkline – 一个直接在浏览器端生成小型走势图的 jQuery 插件。<br>•xCharts – 一个基于 D3、用于构建自定义图表和图形的库。<br>•trianglify – 基于 d3.js 的低多边形（low poly）风格背景图片生成器。<br>•d3-cloud – 创建词云（word cloud）效果的 JavaScript 库。<br>•d4 – 一个基于 D3 、友好、可复用的 DSL 图表库 。<br>•dimple.js – 基于 d3 的简易商业分析图表库。<br>•chartist-js – 简单的响应式图表。<br>•epoch – 一个通用的实时图表库。<br>•c3 – 基于 D3 的可复用图表库。<br>•BabylonJS – 一个运用 HTML5 和 WebGL 构建 3D 游戏的框架。</p><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><p>•ClassManager – 世界上最快、最方便的类系统之一。<br>•klass – 用于创建极富表现力的类工具库。<br>•augment – 世界上最小且最快的一流 JavaScript 继承模式。</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>•Parsley.js – 不用写一行 JavaScript 代码即可在前端验证表单。<br>•jquery-validation – jQuery 验证插件。<br>•validator.js – 字符串验证和过滤（在使用用户输入之前清理用户输入中的有害或危险字符的操作）。<br>•validate.js – 受 CodeIgniter 启发的轻量表单验证 JavaScript 库。<br>•validatr – 跨浏览器的 HTML5 表单验证库。<br>•BootstrapValidator – 是验证表单域中最好的 jQuery 插件。要与 Bootstrap 3 一起使用。<br>•is.js – 检查类型、正则表达式、是否存在、时间等。<br>•FieldVal – 多用途验证库。同时支持同步和异步验证。</p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>•jQuery-File-Upload – File Upload 是一个支持多文件选择、文件拖放、进度条、验证和图片、音频、视频预览的 jQuery 插件。<br>•dropzone – Dropzone 是一个易于使用且支持多文件拖放的库。其支持图片预览并且拥有很好的进度条效果。<br>•flow.js – 一个通过 HTML5 的 File API ，提供多个同时链接的、稳定的、容错的、可恢复的/可重新开始的文件上传库。<br>•fine-uploader – 一个带有进度条、拖放功能和支持直接上传到 S3 （Amazon Simple Storage Service，亚马逊简易存储服务）的多文件上传插件。<br>•FileAPI – JavaScript 文件工具集合。支持多文件上传、拖放和文件分块上传。对于图像，支持裁剪、调整大小和根据 EXIF 自动调整方向。<br>•plupload – 处理文件上传的 JavaScript API，其支持多文件选择、文件类型过滤、分块请求、客户端图片缩放和根据不同的运行环境选择 HTML5、Silverlight 和 Flash。</p><h2 id="模态框和弹出框"><a href="#模态框和弹出框" class="headerlink" title="模态框和弹出框"></a>模态框和弹出框</h2><p>•Magnific-Popup – 专注于性能、轻量、响应式的灯箱（lightbox）脚本。<br>•jquery-popbox – jQuery 提示框插件。<br>•jquery.avgrund.js – 一种新的定于弹出的模态框 jQuery 插件。<br>•vex – 新的、拥有高度可配置和易于改变样式功能的对话框库。<br>•bootstrap-modal – 对 Bootstrap 默认的模态框类进行扩展。其支持响应式、可堆叠和 ajax 等。<br>•css-modal – 纯 CSS 打造的模态框。<br>•jquery-popup-overlay – 是一个响应式的和可访问性强的模态框和工具提示框（tooltips）jQuery 插件。</p><h2 id="图像处理"><a href="#图像处理" class="headerlink" title="图像处理"></a>图像处理</h2><p>•lena.js – 拥有滤镜和实用功能的图像处理库。<br>•pica – 高质量地调整图片大小（拥有快速的、纯 JS 实现的 Lanczos 滤镜算法）。<br>•cropper – 一个简单的图像裁剪 jQuery 插件。</p><h2 id="视频-音频"><a href="#视频-音频" class="headerlink" title="视频/音频"></a>视频/音频</h2><p>•prettyembed.js – 更完美地嵌入 YouTube —— 拥有很好的选项，如高分辨率的预览图、嵌入选项的高级定制和可选的 FitVids 支持。<br>•html5media – 能在所有主流浏览器播放多媒体标签中定义的多媒体文件。<a href="http://html5media.info/" target="_blank" rel="noopener">http://html5media.info/</a><br>•Play-em JS – Play’em 是一个 JavaScript 组件，它能管理音乐/视频播放顺序，通过在一个 DIV 元素里嵌入几个播放器（Youtube、Soundcloud 和 Vimeo）来控制一系列歌曲的播放。<br>•polyplayer – 将 YouTube、Soundcloud 和 Vimeo 播放器的 API 统一成一套。<br>•flowplayer – HTML5 视频播放器 <a href="http://flowplayer.org/" target="_blank" rel="noopener">http://flowplayer.org/</a><br>•mediaelement – 让 HTML5、 Flash 播放器和模仿 HTML5 媒介元素 API 的 Silverlight shim，在所有浏览器拥有一致的 UI。<a href="http://mediaelementjs.com/" target="_blank" rel="noopener">http://mediaelementjs.com/</a><br>•SoundJS – 让音频在 web 上运行更简单的库。它为不同浏览器提供了一致的 API。</p><h2 id="表格网格"><a href="#表格网格" class="headerlink" title="表格网格"></a>表格网格</h2><p>•jTable – 基于 CRUD 表创建 AJAX 的 jQuery 插件。<br>•DataTables – 这是一个非常灵活的工具，在渐进增强的基础上，将高级的交互效果加到 HTML 表格。（jQuery 插件）<br>•floatThead – （jQuery 插件）锁定表格头部，只允许表格内容滚动。适用于任何表格，而且不需要额外的 html 或 css。<br>•Masonry – 瀑布流式的网格布局库。<br>•Packery – 使用装箱算法（bin-packing）的网格布局库。支持拖拽布局。<br>•Isotope – 可过滤和可排序的网格布局的库，它能实现 Masonry、Packery 等布局。</p><h2 id="滚动"><a href="#滚动" class="headerlink" title="滚动"></a>滚动</h2><p>•scrollMonitor – 滚动发生时，可以监听元素的、简单、快速的 API。<br>•headroom – 除非你需要显示页面头部（header），否则将隐藏它，以腾出页面头部空间。<br>•onepage-scroll – 创建一个类似 Apple 的单页面滚动网站（iPhone 5S 网站）。<br>•iscroll – 高性能、轻量、无依赖、兼容多平台的 JavaScript 滚动组件。<br>•skrollr – 独立（不依赖 jQuery） 的视差滚动库，适用于移动设备（Android + iOS）和桌面电脑。<br>•parallax – 面向智能设备的视差引擎。<br>•stellar.js – 让视差滚动变简单。<br>•plax – 基于 jQuery 的视差库。<br>•jparallax – 创建可交互视差效果的 jQuery 插件。<br>•fullPage – 简单和易于使用的、用于创建全屏滚动网站的插件（也被称为单页面网站）。<br>•ScrollMenu – 让老旧无聊的滚动条焕然一新。</p>]]></content>
      
      
      <categories>
          
          <category> 汇总 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html5.js让IE（包括IE6）支持HTML5元素方法</title>
      <link href="/xiaocong/2019/03/05/Html5Js/"/>
      <url>/xiaocong/2019/03/05/Html5Js/</url>
      
        <content type="html"><![CDATA[<p>html5.js让IE（包括IE6）支持HTML5元素方法</p><h2 id="1、引用Google的html5-js文件"><a href="#1、引用Google的html5-js文件" class="headerlink" title="1、引用Google的html5.js文件"></a>1、引用Google的html5.js文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--[if IE]&gt;</span><br><span class="line">&lt;script src=”http://html5shiv.googlecode.com/svn/trunk/html5.js”&gt;&lt;/script&gt;</span><br><span class="line">&lt; ![endif]--&gt;</span><br></pre></td></tr></table></figure><p><b>将上代码复制到head部分，记住一定要是head部分</b>（因为IE必须在元素解析前知道这个元素，所以这个js文件不能在其他位置调用，否则失效）</p><p>当然，你也可以把代码拿出来自己看着办：html5.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">    /*</span><br><span class="line"> HTML5 Shiv v3.6.2pre | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed</span><br><span class="line"> Uncompressed source: https://github.com/aFarkas/html5shiv</span><br><span class="line">*/</span><br><span class="line">(function(l, f) &#123;</span><br><span class="line">    function m() &#123;</span><br><span class="line">        var a = e.elements;</span><br><span class="line">        return &quot;string&quot; == typeof a ? a.split(&quot; &quot;) : a</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function i(a) &#123;</span><br><span class="line">        var b = n[a[o]];</span><br><span class="line">        b || (b = &#123;&#125;, h++, a[o] = h, n[h] = b);</span><br><span class="line">        return b</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function p(a, b, c) &#123;</span><br><span class="line">        b || (b = f);</span><br><span class="line">        if (g) return b.createElement(a);</span><br><span class="line">        c || (c = i(b));</span><br><span class="line">        b = c.cache[a] ? c.cache[a].cloneNode() : r.test(a) ? (c.cache[a] = c.createElem(a)).cloneNode() : c.createElem(a);</span><br><span class="line">        return b.canHaveChildren &amp;&amp; !s.test(a) ? c.frag.appendChild(b) : b</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function t(a, b) &#123;</span><br><span class="line">        if (!b.cache) b.cache = &#123;&#125;, b.createElem = a.createElement, b.createFrag = a.createDocumentFragment, b.frag = b.createFrag();</span><br><span class="line">        a.createElement = function(c) &#123;</span><br><span class="line">            return !e.shivMethods ? b.createElem(c) : p(c, a, b)</span><br><span class="line">        &#125;;</span><br><span class="line">        a.createDocumentFragment = Function(&quot;h,f&quot;, &quot;return function()&#123;var n=f.cloneNode(),c=n.createElement;h.shivMethods&amp;&amp;(&quot; + m().join().replace(/\w+/g, function(a) &#123;</span><br><span class="line">            b.createElem(a);</span><br><span class="line">            b.frag.createElement(a);</span><br><span class="line">            return &apos;c(&quot;&apos; + a + &apos;&quot;)&apos;</span><br><span class="line">        &#125;) + &quot;);return n&#125;&quot;)(e, b.frag)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function q(a) &#123;</span><br><span class="line">        a || (a = f);</span><br><span class="line">        var b = i(a);</span><br><span class="line">        if (e.shivCSS &amp;&amp; !j &amp;&amp; !b.hasCSS) &#123;</span><br><span class="line">            var c, d = a;</span><br><span class="line">            c = d.createElement(&quot;p&quot;);</span><br><span class="line">            d = d.getElementsByTagName(&quot;head&quot;)[0] || d.documentElement;</span><br><span class="line">            c.innerHTML = &quot;x&lt;style&gt;article,aside,figcaption,figure,footer,header,hgroup,main,nav,section&#123;display:block&#125;mark&#123;background:#FF0;color:#000&#125;&lt;/style&gt;&quot;;</span><br><span class="line">            c = d.insertBefore(c.lastChild, d.firstChild);</span><br><span class="line">            b.hasCSS = !! c</span><br><span class="line">        &#125;</span><br><span class="line">        g || t(a, b);</span><br><span class="line">        return a</span><br><span class="line">    &#125;</span><br><span class="line">    var k = l.html5 || &#123;&#125;, s = /^&lt;|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,</span><br><span class="line">        r = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,</span><br><span class="line">        j, o = &quot;_html5shiv&quot;,</span><br><span class="line">        h = 0,</span><br><span class="line">        n = &#123;&#125;, g;</span><br><span class="line">    (function() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            var a = f.createElement(&quot;a&quot;);</span><br><span class="line">            a.innerHTML = &quot;&lt;xyz&gt;&lt;/xyz&gt;&quot;;</span><br><span class="line">            j = &quot;hidden&quot; in a;</span><br><span class="line">            var b;</span><br><span class="line">            if (!(b = 1 == a.childNodes.length)) &#123;</span><br><span class="line">                f.createElement(&quot;a&quot;);</span><br><span class="line">                var c = f.createDocumentFragment();</span><br><span class="line">                b = &quot;undefined&quot; == typeof c.cloneNode ||</span><br><span class="line">                    &quot;undefined&quot; == typeof c.createDocumentFragment || &quot;undefined&quot; == typeof c.createElement</span><br><span class="line">            &#125;</span><br><span class="line">            g = b</span><br><span class="line">        &#125; catch (d) &#123;</span><br><span class="line">            g = j = !0</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">    var e = &#123;</span><br><span class="line">        elements: k.elements || &quot;abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup main mark meter nav output progress section summary time video&quot;,</span><br><span class="line">        version: &quot;3.6.2pre&quot;,</span><br><span class="line">        shivCSS: !1 !== k.shivCSS,</span><br><span class="line">        supportsUnknownElements: g,</span><br><span class="line">        shivMethods: !1 !== k.shivMethods,</span><br><span class="line">        type: &quot;default&quot;,</span><br><span class="line">        shivDocument: q,</span><br><span class="line">        createElement: p,</span><br><span class="line">        createDocumentFragment: function(a, b) &#123;</span><br><span class="line">            a || (a = f);</span><br><span class="line">            if (g) return a.createDocumentFragment();</span><br><span class="line">            for (var b = b || i(a), c = b.frag.cloneNode(), d = 0, e = m(), h = e.length; d &lt; h; d++) c.createElement(e[d]);</span><br><span class="line">            return c</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    l.html5 = e;</span><br><span class="line">    q(f)</span><br><span class="line">&#125;)(this, document);</span><br></pre></td></tr></table></figure><h2 id="2、最后在css里面加上这段："><a href="#2、最后在css里面加上这段：" class="headerlink" title="2、最后在css里面加上这段："></a>2、最后在css里面加上这段：</h2><p>/<em>html5</em>/<br>article,aside,dialog,footer,header,section,footer,nav,figure,menu{display:block}</p>]]></content>
      
      
      <categories>
          
          <category> js插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>video.js的使用及问题</title>
      <link href="/xiaocong/2019/03/04/VideoJs/"/>
      <url>/xiaocong/2019/03/04/VideoJs/</url>
      
        <content type="html"><![CDATA[<p>最近的项目中需要播放视频，鉴于html5元素video的一些坑及不想自己造轮子，于是就找到了web端播放视频使用量最多的插件video.js，video.js是国外开发者开发的，英语本身就不好的我看英文文档简直是折磨，国内又没有中文文档，能搜的到的基本是简单的使用及最基本的api的介绍，想要实现一些自定义功能无从下手，所以我在这里整理一份我所遇到的问题及解决方法</p><h2 id="1、视频初始化"><a href="#1、视频初始化" class="headerlink" title="1、视频初始化"></a>1、视频初始化</h2><p>video.js有两种初始化方式，一种是在video的html标签之中，一种是使用js来进行初始化</p><h3 id="1-1、在video中进行初始化"><a href="#1-1、在video中进行初始化" class="headerlink" title="1.1、在video中进行初始化"></a>1.1、在video中进行初始化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  &lt;video</span><br><span class="line">  id=&quot;my-player&quot;</span><br><span class="line">  class=&quot;video-js&quot;</span><br><span class="line">  controls</span><br><span class="line">  preload=&quot;auto&quot;</span><br><span class="line">  poster=&quot;//vjs.zencdn.net/v/oceans.png&quot;</span><br><span class="line">  width=&quot;600&quot;</span><br><span class="line">  height=&quot;400&quot;</span><br><span class="line">  data-setup=&apos;&#123;&#125;&apos;&gt;</span><br><span class="line">&lt;source src=&quot;//vjs.zencdn.net/v/oceans.mp4&quot; type=&quot;video/mp4&quot;&gt;&lt;/source&gt;</span><br><span class="line">&lt;source src=&quot;//vjs.zencdn.net/v/oceans.webm&quot; type=&quot;video/webm&quot;&gt;&lt;/source&gt;</span><br><span class="line">&lt;source src=&quot;//vjs.zencdn.net/v/oceans.ogv&quot; type=&quot;video/ogg&quot;&gt;&lt;/source&gt;</span><br><span class="line">&lt;p class=&quot;vjs-no-js&quot;&gt;</span><br><span class="line">  To view this video please enable JavaScript, and consider upgrading to a</span><br><span class="line">  web browser that</span><br><span class="line">  &lt;a href=&quot;https://videojs.com/html5-video-support/&quot; target=&quot;_blank&quot;&gt;</span><br><span class="line">    supports HTML5 video</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure><p>效果</p><p><img src="/xiaocong/medias/banner/articlex.png" alt="效果图" title></p><h3 id="1-2、使用js进行初始化"><a href="#1-2、使用js进行初始化" class="headerlink" title="1.2、使用js进行初始化"></a>1.2、使用js进行初始化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">    &lt;!-- vjs-big-play-centered可使大的播放按钮居住，vjs-fluid可使视频占满容器 --&gt;</span><br><span class="line">&lt;video id=&quot;myVideo&quot; class=&quot;video-js vjs-big-play-centered vjs-fluid&quot;&gt;</span><br><span class="line">  &lt;p class=&quot;vjs-no-js&quot;&gt;</span><br><span class="line">    To view this video please enable JavaScript, and consider upgrading to a</span><br><span class="line">    web browser that</span><br><span class="line">    &lt;a href=&quot;https://videojs.com/html5-video-support/&quot; target=&quot;_blank&quot;&gt;</span><br><span class="line">      supports HTML5 video</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">&lt;/video&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">var player = videojs(document.getElementById(&apos;myVideo&apos;), &#123;</span><br><span class="line">  controls: true, // 是否显示控制条</span><br><span class="line">  poster: &apos;xxx&apos;, // 视频封面图地址</span><br><span class="line">  preload: &apos;auto&apos;,</span><br><span class="line">  autoplay: false,</span><br><span class="line">  fluid: true, // 自适应宽高</span><br><span class="line">  language: &apos;zh-CN&apos;, // 设置语言</span><br><span class="line">  muted: false, // 是否静音</span><br><span class="line">  inactivityTimeout: false,</span><br><span class="line">  controlBar: &#123; // 设置控制条组件</span><br><span class="line">    /* 设置控制条里面组件的相关属性及显示与否</span><br><span class="line">    &apos;currentTimeDisplay&apos;:true,</span><br><span class="line">    &apos;timeDivider&apos;:true,</span><br><span class="line">    &apos;durationDisplay&apos;:true,</span><br><span class="line">    &apos;remainingTimeDisplay&apos;:false,</span><br><span class="line">    volumePanel: &#123;</span><br><span class="line">      inline: false,</span><br><span class="line">    &#125;</span><br><span class="line">    */</span><br><span class="line">    /* 使用children的形式可以控制每一个控件的位置，以及显示与否 */</span><br><span class="line">    children: [</span><br><span class="line">      &#123;name: &apos;playToggle&apos;&#125;, // 播放按钮</span><br><span class="line">      &#123;name: &apos;currentTimeDisplay&apos;&#125;, // 当前已播放时间</span><br><span class="line">      &#123;name: &apos;progressControl&apos;&#125;, // 播放进度条</span><br><span class="line">      &#123;name: &apos;durationDisplay&apos;&#125;, // 总时间</span><br><span class="line">      &#123; // 倍数播放</span><br><span class="line">        name: &apos;playbackRateMenuButton&apos;,</span><br><span class="line">        &apos;playbackRates&apos;: [0.5, 1, 1.5, 2, 2.5]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: &apos;volumePanel&apos;, // 音量控制</span><br><span class="line">        inline: false, // 不使用水平方式</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;name: &apos;FullscreenToggle&apos;&#125; // 全屏</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  sources:[ // 视频源</span><br><span class="line">      &#123;</span><br><span class="line">          src: &apos;//vjs.zencdn.net/v/oceans.mp4&apos;,</span><br><span class="line">          type: &apos;video/mp4&apos;,</span><br><span class="line">          poster: &apos;//vjs.zencdn.net/v/oceans.png&apos;</span><br><span class="line">      &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;, function ()&#123;</span><br><span class="line">  console.log(&apos;视频可以播放了&apos;,this);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="2、controlBar组件的说明"><a href="#2、controlBar组件的说明" class="headerlink" title="2、controlBar组件的说明"></a>2、controlBar组件的说明</h2><ul><li>playToggle, //播放暂停按钮</li><li>volumeMenuButton,//音量控制</li><li>currentTimeDisplay,//当前播放时间</li><li>timeDivider, // ‘/‘ 分隔符</li><li>durationDisplay, //总时间</li><li>progressControl, //点播流时，播放进度条，seek控制</li><li>liveDisplay, //直播流时，显示LIVE</li><li>remainingTimeDisplay, //当前播放时间</li><li>playbackRateMenuButton, //播放速率，当前只有html5模式下才支持设置播放速率</li><li>fullscreenToggle //全屏控制</li></ul><p>currentTimeDisplay,timeDivider,durationDisplay是相对于 remainingTimeDisplay的另一套组件，后者只显示当前播放时间，前者还显示总时间。若要显示成前者这种模式，即 ‘当前时间/总时间’，可以在初始化播放器选项中配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var myPlayer = neplayer(&apos;my-video&apos;, &#123;controlBar:&#123;</span><br><span class="line">&apos;currentTimeDisplay&apos;:true,</span><br><span class="line">&apos;timeDivider&apos;:true,</span><br><span class="line">&apos;durationDisplay&apos;:true,</span><br><span class="line">&apos;remainingTimeDisplay&apos;:false</span><br><span class="line">&#125;&#125;, function() &#123;</span><br><span class="line">     console.log(&apos;播放器初始化完成&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="3、video-js样式修改"><a href="#3、video-js样式修改" class="headerlink" title="3、video.js样式修改"></a>3、video.js样式修改</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">.video-js&#123; /* 给.video-js设置字体大小以统一各浏览器样式表现，因为video.js采用的是em单位 */</span><br><span class="line">  font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line">.video-js button&#123;</span><br><span class="line">  outline: none;</span><br><span class="line">&#125;</span><br><span class="line">.video-js.vjs-fluid,</span><br><span class="line">.video-js.vjs-16-9,</span><br><span class="line">.video-js.vjs-4-3&#123; /* 视频占满容器高度 */</span><br><span class="line">  height: 100%;</span><br><span class="line">  background-color: #161616;</span><br><span class="line">&#125;</span><br><span class="line">.vjs-poster&#123;</span><br><span class="line">  background-color: #161616;</span><br><span class="line">&#125;</span><br><span class="line">.video-js .vjs-big-play-button&#123; /* 中间大的播放按钮 */</span><br><span class="line">  font-size: 2.5em;</span><br><span class="line">  line-height: 2.3em;</span><br><span class="line">  height: 2.5em;</span><br><span class="line">  width: 2.5em;</span><br><span class="line">  -webkit-border-radius: 2.5em;</span><br><span class="line">  -moz-border-radius: 2.5em;</span><br><span class="line">  border-radius: 2.5em;</span><br><span class="line">  background-color: rgba(115,133,159,.5);</span><br><span class="line">  border-width: 0.12em;</span><br><span class="line">  margin-top: -1.25em;</span><br><span class="line">  margin-left: -1.75em;</span><br><span class="line">&#125;</span><br><span class="line">.video-js.vjs-paused .vjs-big-play-button&#123; /* 视频暂停时显示播放按钮 */</span><br><span class="line">  display: block;</span><br><span class="line">&#125;</span><br><span class="line">.video-js.vjs-error .vjs-big-play-button&#123; /* 视频加载出错时隐藏播放按钮 */</span><br><span class="line">  display: none;</span><br><span class="line">&#125;</span><br><span class="line">.vjs-loading-spinner &#123; /* 加载圆圈 */</span><br><span class="line">  font-size: 2.5em;</span><br><span class="line">  width: 2em;</span><br><span class="line">  height: 2em;</span><br><span class="line">  border-radius: 1em;</span><br><span class="line">  margin-top: -1em;</span><br><span class="line">  margin-left: -1.5em;</span><br><span class="line">&#125;</span><br><span class="line">.video-js .vjs-control-bar&#123; /* 控制条默认显示 */</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br><span class="line">.video-js .vjs-time-control&#123;display:block;&#125;</span><br><span class="line">.video-js .vjs-remaining-time&#123;display: none;&#125;</span><br><span class="line"></span><br><span class="line">.vjs-button &gt; .vjs-icon-placeholder:before&#123; /* 控制条所有图标，图标字体大小最好使用px单位，如果使用em，各浏览器表现可能会不大一样 */</span><br><span class="line">  font-size: 22px;</span><br><span class="line">  line-height: 1.9;</span><br><span class="line">&#125;</span><br><span class="line">.video-js .vjs-playback-rate .vjs-playback-rate-value&#123;</span><br><span class="line">  line-height: 2.4;</span><br><span class="line">  font-size: 18px;</span><br><span class="line">&#125;</span><br><span class="line">/* 进度条背景色 */</span><br><span class="line">.video-js .vjs-play-progress&#123;</span><br><span class="line">  color: #ffb845;</span><br><span class="line">  background-color: #ffb845;</span><br><span class="line">&#125;</span><br><span class="line">.video-js .vjs-progress-control .vjs-mouse-display&#123;</span><br><span class="line">  background-color: #ffb845;</span><br><span class="line">&#125;</span><br><span class="line">.vjs-mouse-display .vjs-time-tooltip&#123;</span><br><span class="line">  padding-bottom: 6px;</span><br><span class="line">  background-color: #ffb845;</span><br><span class="line">&#125;</span><br><span class="line">.video-js .vjs-play-progress .vjs-time-tooltip&#123;</span><br><span class="line">  display: none!important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、动态切换视频"><a href="#4、动态切换视频" class="headerlink" title="4、动态切换视频"></a>4、动态切换视频</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  var data = &#123;</span><br><span class="line">    src: &apos;xxx.mp4&apos;,</span><br><span class="line">    type: &apos;video/mp4&apos;</span><br><span class="line">  &#125;;</span><br><span class="line">  var player = videojs(&apos;myVideo&apos;, &#123;...&#125;);</span><br><span class="line">  player.pause();</span><br><span class="line">  player.src(data);</span><br><span class="line">  player.load(data);</span><br><span class="line">  // 动态切换poster</span><br><span class="line">  player.posterImage.setSrc(&apos;xxx.jpg&apos;);</span><br><span class="line">  player.play();</span><br><span class="line"></span><br><span class="line">  // 销毁videojs</span><br><span class="line">  //player.dispose();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="5、设置语言"><a href="#5、设置语言" class="headerlink" title="5、设置语言"></a>5、设置语言</h2><h3 id="5-1传统形式开发"><a href="#5-1传统形式开发" class="headerlink" title="5.1传统形式开发"></a>5.1传统形式开发</h3><p>对于使用script标签形式的方式引入video.js，只需要在页面中引入你需要的语言包即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;//example.com/path/to/lang/es.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;//example.com/path/to/lang/zh-CN.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;//example.com/path/to/lang/zh-TW.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">var player = videojs(&apos;myVideo&apos;, &#123;</span><br><span class="line">    language: &apos;zh-CN&apos; // 初始化时设置语言，立即生效</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">/* 动态切换语言</span><br><span class="line">  使用这种方式进行动态切换不会立即生效，必须有所操作后才会生效。如播放按钮，必须点击一次播放按钮后播放按钮的提示文字才会改变  </span><br><span class="line"> */</span><br><span class="line">//player.language(&apos;zh-TW&apos;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="5-2、vue开发"><a href="#5-2、vue开发" class="headerlink" title="5.2、vue开发"></a>5.2、vue开发</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import Video from &apos;video.js&apos;</span><br><span class="line">/* 不能直接引入js，否则会报错：videojs is not defined </span><br><span class="line">import &apos;video.js/dist/lang/zh-CN.js&apos; */</span><br><span class="line">import video_zhCN from &apos;video.js/dist/lang/zh-CN.json&apos;</span><br><span class="line">import video_en from  &apos;video.js/dist/lang/en.json&apos;</span><br><span class="line">import &apos;video.js/dist/video-js.css&apos;</span><br><span class="line">Video.addLanguage(&apos;zh-CN&apos;, video_zhCN);</span><br><span class="line">Video.addLanguage(&apos;en&apos;, video_en);</span><br></pre></td></tr></table></figure><h2 id="6、解决在iPhone中播放时自动全屏问题"><a href="#6、解决在iPhone中播放时自动全屏问题" class="headerlink" title="6、解决在iPhone中播放时自动全屏问题"></a>6、解决在iPhone中播放时自动全屏问题</h2><p>在iPhone设备上播放视频时(微信浏览器上也会有这个问题)会自动全屏，这里的全屏并不是常规的手机横屏那种全屏，而是类似于一个modal弹窗的全屏，解决办法就是在video标签中添加playsinline=”true”属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;video</span><br><span class="line">    webkit-playsinline=&quot;true&quot;</span><br><span class="line">    playsinline=&quot;true&quot;</span><br><span class="line">    class=&quot;video-js vjs-big-play-centered vjs-fluid&quot;&gt;</span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure><h2 id="7、参考文章"><a href="#7、参考文章" class="headerlink" title="7、参考文章"></a>7、参考文章</h2><ul><li><a href="http://vcloud.163.com/vcloud-sdk-manual/WebDemos/LivePlayer_Web/introToComponent.html" rel="nofollow noreferrer" target="_blank">视频云web播放器样式和组件自定义</a></li><li><a href="https://zhuanlan.zhihu.com/p/28338413" rel="nofollow noreferrer" target="_blank">Video.js 踩坑简单入门</a></li><li><a href="http://www.cnblogs.com/afrog/p/6689179.html" rel="nofollow noreferrer" target="_blank">免费视频播放器videojs中文教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> js插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora-vue-theme主题介绍</title>
      <link href="/xiaocong/2018/09/07/hello-world/"/>
      <url>/xiaocong/2018/09/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! 这是你的第一篇文章。查看文档了解更多信息。如果你在使用Hexo时遇到任何问题，你可以在故障排除中找到答案，或者你可以在GitHub上问我。</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p><img src="https://www.zybuluo.com/static/img/logo.png" alt="cmd-markdown-logo" title></p>### Create a new post<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 介绍 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
